{
.formatVersion = 3;
axes = (
{
name = Weight;
tag = wght;
}
);
classes = (
{
code = "dollar comma period slash colon semicolon A O a g i l o cent sterling yen Scedilla scedilla Tcedilla tcedilla florin Decyr Zhecyr Kacyr Elcyr becyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr comma.tf period.tf zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr";
name = aalt;
},
{
code = "dollar.tf comma.tf period.tf fraction colon.tf semicolon.tf ordfeminine ordmasculine ordfeminine g.ss01 idotaccent l.ss01 ordmasculine cent.tf sterling.tf yen.tf Scommaaccent scommaaccent Tcommaaccent tcommaaccent florin.tf Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr becyr.locl vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf comma period zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom";
name = aalt2;
},
{
code = "zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf";
name = calt;
},
{
code = "zero one two three four five six seven eight nine";
name = calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups;
},
{
code = "gravecomb acutecomb circumflexcomb tildecomb macroncomb brevecomb dotaccentcomb dieresiscomb ringcomb hungarumlautcomb caroncomb hookabovecomb dblgravecomb breveinvertedcomb";
name = ccmp;
},
{
code = "zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom";
name = dnom_frac;
},
{
code = "zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr";
name = frac_numr;
},
{
code = "zero.osf one.osf two.osf three.osf four.osf five.osf six.osf seven.osf eight.osf nine.osf";
name = lnum_onum;
},
{
code = "Decyr Zhecyr Kacyr Elcyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr";
name = locl;
},
{
code = "Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr";
name = locl2;
},
{
code = "comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf";
name = pnum;
},
{
code = "comma period zero one two three four five six seven eight nine";
name = pnum2;
},
{
code = "zero.subs one.subs two.subs three.subs four.subs five.subs six.subs seven.subs eight.subs nine.subs";
name = sinf_subs;
},
{
code = "onesuperior twosuperior threesuperior";
name = sups;
},
{
code = "dollar comma period zero one two three four five six seven eight nine colon semicolon cent sterling yen florin";
name = tnum;
},
{
code = "dollar.tf comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf colon.tf semicolon.tf cent.tf sterling.tf yen.tf florin.tf colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf";
name = tnum2;
}
);
familyName = "Cheyenne Sans VF";
customParameters = (
{
name = glyphOrder;
value = (
.notdef,
uni0000,
CR,
space,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
nbspace,
exclamdown,
cent,
sterling,
currency,
yen,
brokenbar,
section,
dieresis,
copyright,
ordfeminine,
guillemetleft,
logicalnot,
softhyphen,
registered,
macron,
degree,
plusminus,
twosuperior,
threesuperior,
acute,
micro,
paragraph,
periodcentered,
cedilla,
onesuperior,
ordmasculine,
guillemetright,
onequarter,
onehalf,
threequarters,
questiondown,
Agrave,
Aacute,
Acircumflex,
Atilde,
Adieresis,
Aring,
AE,
Ccedilla,
Egrave,
Eacute,
Ecircumflex,
Edieresis,
Igrave,
Iacute,
Icircumflex,
Idieresis,
Eth,
Ntilde,
Ograve,
Oacute,
Ocircumflex,
Otilde,
Odieresis,
multiply,
Oslash,
Ugrave,
Uacute,
Ucircumflex,
Udieresis,
Yacute,
Thorn,
germandbls,
agrave,
aacute,
acircumflex,
atilde,
adieresis,
aring,
ae,
ccedilla,
egrave,
eacute,
ecircumflex,
edieresis,
igrave,
iacute,
icircumflex,
idieresis,
eth,
ntilde,
ograve,
oacute,
ocircumflex,
otilde,
odieresis,
divide,
oslash,
ugrave,
uacute,
ucircumflex,
udieresis,
yacute,
thorn,
ydieresis,
Amacron,
amacron,
Abreve,
abreve,
Aogonek,
aogonek,
Cacute,
cacute,
Ccircumflex,
ccircumflex,
Cdotaccent,
cdotaccent,
Ccaron,
ccaron,
Dcaron,
dcaron,
Dcroat,
dcroat,
Emacron,
emacron,
Ebreve,
ebreve,
Edotaccent,
edotaccent,
Eogonek,
eogonek,
Ecaron,
ecaron,
Gcircumflex,
gcircumflex,
Gbreve,
gbreve,
Gdotaccent,
gdotaccent,
Gcommaaccent,
gcommaaccent,
Hcircumflex,
hcircumflex,
Hbar,
hbar,
Itilde,
itilde,
Imacron,
imacron,
Ibreve,
ibreve,
Iogonek,
iogonek,
Idotaccent,
idotless,
IJ,
ij,
Jcircumflex,
jcircumflex,
Kcommaaccent,
kcommaaccent,
kgreenlandic,
Lacute,
lacute,
Lcommaaccent,
lcommaaccent,
Lcaron,
lcaron,
Ldot,
ldot,
Lslash,
lslash,
Nacute,
nacute,
Ncommaaccent,
ncommaaccent,
Ncaron,
ncaron,
napostrophe,
Eng,
eng,
Omacron,
omacron,
Obreve,
obreve,
Ohungarumlaut,
ohungarumlaut,
OE,
oe,
Racute,
racute,
Rcommaaccent,
rcommaaccent,
Rcaron,
rcaron,
Sacute,
sacute,
Scircumflex,
scircumflex,
Scedilla,
scedilla,
Scaron,
scaron,
Tcedilla,
tcedilla,
Tcaron,
tcaron,
Tbar,
tbar,
Utilde,
utilde,
Umacron,
umacron,
Ubreve,
ubreve,
Uring,
uring,
Uhungarumlaut,
uhungarumlaut,
Uogonek,
uogonek,
Wcircumflex,
wcircumflex,
Ycircumflex,
ycircumflex,
Ydieresis,
Zacute,
zacute,
Zdotaccent,
zdotaccent,
Zcaron,
zcaron,
Schwa,
florin,
Ohorn,
ohorn,
Uhorn,
uhorn,
DZcaron,
Dzcaron,
dzcaron,
LJ,
Lj,
lj,
NJ,
Nj,
nj,
ucaron,
Oogonek,
oogonek,
DZ,
Dz,
dz,
Gacute,
gacute,
Aringacute,
aringacute,
AEacute,
aeacute,
Oslashacute,
oslashacute,
Adblgrave,
adblgrave,
Ainvertedbreve,
ainvertedbreve,
Edblgrave,
edblgrave,
Einvertedbreve,
einvertedbreve,
Idblgrave,
idblgrave,
Iinvertedbreve,
iinvertedbreve,
Odblgrave,
odblgrave,
Oinvertedbreve,
oinvertedbreve,
Rdblgrave,
rdblgrave,
Rinvertedbreve,
rinvertedbreve,
Udblgrave,
udblgrave,
Uinvertedbreve,
uinvertedbreve,
Scommaaccent,
scommaaccent,
Tcommaaccent,
tcommaaccent,
jdotless,
schwa,
commaturnedmod,
apostrophemod,
circumflex,
caron,
breve,
dotaccent,
ring,
ogonek,
tilde,
hungarumlaut,
gravecomb,
acutecomb,
circumflexcomb,
tildecomb,
macroncomb,
brevecomb,
dotaccentcomb,
dieresiscomb,
hookabovecomb,
ringcomb,
hungarumlautcomb,
caroncomb,
dblgravecomb,
breveinvertedcomb,
horncomb,
dotbelowcomb,
commaaccentcomb,
cedillacomb,
ogonekcomb,
dialytikatonoscomb,
numeralsign,
lownumeralsign,
questiongreek,
tonos,
dieresistonos,
Alphatonos,
anoteleia,
Epsilontonos,
Etatonos,
Iotatonos,
Omicrontonos,
Upsilontonos,
Omegatonos,
iotadieresistonos,
Alpha,
Beta,
Gamma,
Delta,
Epsilon,
Zeta,
Eta,
Theta,
Iota,
Kappa,
Lambda,
Mu,
Nu,
Xi,
Omicron,
Pi,
Rho,
Sigma,
Tau,
Upsilon,
Phi,
Chi,
Psi,
Omega,
Iotadieresis,
Upsilondieresis,
alphatonos,
epsilontonos,
etatonos,
iotatonos,
upsilondieresistonos,
alpha,
beta,
gamma,
delta,
epsilon,
zeta,
eta,
theta,
iota,
kappa,
lambda,
mu,
nu,
xi,
omicron,
pi,
rho,
sigmafinal,
sigma,
tau,
upsilon,
phi,
chi,
psi,
omega,
iotadieresis,
upsilondieresis,
omicrontonos,
upsilontonos,
omegatonos,
Kaisymbol,
kaisymbol,
Iegravecyr,
Iocyr,
Djecyr,
Gjecyr,
Eukrcyr,
Dzecyr,
Iukrcyr,
Yukrcyr,
Jecyr,
Ljecyr,
Njecyr,
Tshecyr,
Kjecyr,
Igravecyr,
Ushortcyr,
Dzhecyr,
Acyr,
Becyr,
Vecyr,
Gecyr,
Decyr,
Iecyr,
Zhecyr,
Zecyr,
Icyr,
Ishortcyr,
Kacyr,
Elcyr,
Emcyr,
Encyr,
Ocyr,
Pecyr,
Ercyr,
Escyr,
Tecyr,
Ucyr,
Efcyr,
Hacyr,
Tsecyr,
Checyr,
Shacyr,
Shchacyr,
Hardcyr,
Ylongcyr,
Softcyr,
Ereversedcyr,
Yucyr,
Yacyr,
acyr,
becyr,
vecyr,
gecyr,
decyr,
iecyr,
zhecyr,
zecyr,
icyr,
ishortcyr,
kacyr,
elcyr,
emcyr,
encyr,
ocyr,
pecyr,
ercyr,
escyr,
tecyr,
ucyr,
efcyr,
hacyr,
tsecyr,
checyr,
shacyr,
shchacyr,
hardcyr,
ylongcyr,
softcyr,
ereversedcyr,
yucyr,
yacyr,
iegravecyr,
iocyr,
djecyr,
gjecyr,
eukrcyr,
dzecyr,
iukrcyr,
yukrcyr,
jecyr,
ljecyr,
njecyr,
tshecyr,
kjecyr,
igravecyr,
ushortcyr,
dzhecyr,
Geupcyr,
geupcyr,
Gestrokecyr,
gestrokecyr,
Zhetailcyr,
zhetailcyr,
Zetailcyr,
zetailcyr,
Katailcyr,
katailcyr,
Kaverticalstrokecyr,
kaverticalstrokecyr,
Kabashkcyr,
kabashkcyr,
Entailcyr,
entailcyr,
Estailcyr,
estailcyr,
Tetailcyr,
tetailcyr,
Ustraightcyr,
ustraightcyr,
Ustraightstrokecyr,
ustraightstrokecyr,
Xatailcyr,
xatailcyr,
Chetailcyr,
chetailcyr,
Chevertcyr,
chevertcyr,
Shhacyr,
shhacyr,
Palochkacyr,
Zhebrevecyr,
zhebrevecyr,
palochkacyr,
Abrevecyr,
abrevecyr,
Adieresiscyr,
adieresiscyr,
Iebrevecyr,
iebrevecyr,
Schwacyr,
schwacyr,
Zhedieresiscyr,
zhedieresiscyr,
Odieresiscyr,
odieresiscyr,
Obarcyr,
obarcyr,
Umacroncyr,
umacroncyr,
Udieresiscyr,
udieresiscyr,
Uacutedblcyr,
uacutedblcyr,
Hastrokecyr,
hastrokecyr,
Ddotbelow,
ddotbelow,
Hdotbelow,
hdotbelow,
Ndot,
ndot,
Rdotbelow,
rdotbelow,
Sdotbelow,
sdotbelow,
Tdotbelow,
tdotbelow,
Wgrave,
wgrave,
Wacute,
wacute,
Wdieresis,
wdieresis,
Zdotbelow,
zdotbelow,
Germandbls,
Adotbelow,
adotbelow,
Ahoi,
ahoi,
Acircumflexacute,
acircumflexacute,
Acircumflexgrave,
acircumflexgrave,
Acircumflexhoi,
acircumflexhoi,
Acircumflextilde,
acircumflextilde,
Acircumflexdotbelow,
acircumflexdotbelow,
Abreveacute,
abreveacute,
Abrevegrave,
abrevegrave,
Abrevehoi,
abrevehoi,
Abrevetilde,
abrevetilde,
Abrevedotbelow,
abrevedotbelow,
Edotbelow,
edotbelow,
Ehoi,
ehoi,
Etilde,
etilde,
Ecircumflexacute,
ecircumflexacute,
Ecircumflexgrave,
ecircumflexgrave,
Ecircumflexhoi,
ecircumflexhoi,
Ecircumflextilde,
ecircumflextilde,
Ecircumflexdotbelow,
ecircumflexdotbelow,
Ihoi,
ihoi,
Idotbelow,
idotbelow,
Odotbelow,
odotbelow,
Ohoi,
ohoi,
Ocircumflexacute,
ocircumflexacute,
Ocircumflexgrave,
ocircumflexgrave,
Ocircumflexhoi,
ocircumflexhoi,
Ocircumflextilde,
ocircumflextilde,
Ocircumflexdotbelow,
ocircumflexdotbelow,
Ohornacute,
ohornacute,
Ohorngrave,
ohorngrave,
Ohornhoi,
ohornhoi,
Ohorntilde,
ohorntilde,
Ohorndotbelow,
ohorndotbelow,
Udotbelow,
udotbelow,
Uhoi,
uhoi,
Uhornacute,
uhornacute,
Uhorngrave,
uhorngrave,
Uhornhoi,
uhornhoi,
Uhorntilde,
uhorntilde,
Uhorndotbelow,
uhorndotbelow,
Ygrave,
ygrave,
Ydotbelow,
ydotbelow,
Yhoi,
yhoi,
Ytilde,
ytilde,
endash,
emdash,
quoteleft,
quoteright,
quotesinglbase,
quotedblleft,
quotedblright,
quotedblbase,
dagger,
daggerdbl,
bullet,
ellipsis,
perthousand,
guilsinglleft,
guilsinglright,
fraction,
zerosuperior,
foursuperior,
fivesuperior,
sixsuperior,
sevensuperior,
eightsuperior,
ninesuperior,
colonsign,
naira,
euro,
rupeeIndian,
liraTurkish,
litre,
numero,
published,
servicemark,
trademark,
Ohm,
estimated,
onethird,
twothirds,
oneeighth,
threeeighths,
fiveeighths,
seveneighths,
partialdiff,
emptyset,
increment,
product,
summation,
minus,
divisionslash,
bulletoperator,
radical,
infinity,
integral,
approxequal,
notequal,
lessequal,
greaterequal,
lozenge,
dollar.tf,
comma.tf,
period.tf,
zero.dnom,
zero.numr,
zero.osf,
zero.subs,
zero.tf,
one.dnom,
one.numr,
one.osf,
one.subs,
one.tf,
two.dnom,
two.numr,
two.osf,
two.subs,
two.tf,
three.dnom,
three.numr,
three.osf,
three.subs,
three.tf,
four.dnom,
four.numr,
four.osf,
four.subs,
four.tf,
five.dnom,
five.numr,
five.osf,
five.subs,
five.tf,
six.dnom,
six.numr,
six.osf,
six.subs,
six.tf,
seven.dnom,
seven.numr,
seven.osf,
seven.subs,
seven.tf,
eight.dnom,
eight.numr,
eight.osf,
eight.subs,
eight.tf,
nine.dnom,
nine.numr,
nine.osf,
nine.subs,
nine.tf,
colon_f_l_a_g_colon.liga,
colon_f_l_a_g_two_colon.liga,
colon_one_eight_F_colon.liga,
colon.tf,
colon.tf.case,
semicolon.tf,
g.ss01,
i.bgr,
cent.tf,
sterling.tf,
yen.tf,
igrave.bgr,
florin.tf,
breve.cyr,
breve.cyr.case,
gravecomb.viet,
acutecomb.001,
acutecomb.viet,
circumflexcomb_acutecomb,
circumflexcomb_gravecomb,
circumflexcomb_hookabovecomb,
circumflexcomb_tildecomb,
brevecomb_acutecomb,
brevecomb_gravecomb,
brevecomb_hookabovecomb,
brevecomb_tildecomb,
caroncomb.alt,
tonos.case,
Decyr.bgr,
Zhecyr.bgr,
Kacyr.bgr,
Elcyr.bgr,
becyr.locl,
vecyr.bgr,
gecyr.bgr,
decyr.bgr,
zhecyr.bgr,
zecyr.bgr,
ishortcyr.bgr,
kacyr.bgr,
elcyr.bgr,
encyr.bgr,
pecyr.bgr,
tecyr.bgr,
tsecyr.bgr,
checyr.bgr,
shacyr.bgr,
shchacyr.bgr,
hardcyr.bgr,
softcyr.bgr,
yucyr.bgr,
emdash.alt,
fraction.alt,
colonsign.tf,
franc.tf,
lira.tf,
won.tf,
dong.tf,
Euro.tf,
indianrupee.tf,
turkishlira.tf,
idotaccent,
tonoscomb,
colon.case,
fi,
fl,
f_f.liga,
p.001,
q.001,
franc,
lira
);
}
);
featurePrefixes = (
{
code = "#> classes
#/> otclasses
@aalt = [dollar comma period slash colon semicolon A O a g i l o cent sterling yen Scedilla scedilla Tcedilla tcedilla florin Decyr Zhecyr Kacyr Elcyr becyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr comma.tf period.tf zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
@aalt2 = [dollar.tf comma.tf period.tf fraction colon.tf semicolon.tf ordfeminine ordmasculine ordfeminine g.ss01 idotaccent l.ss01 ordmasculine cent.tf sterling.tf yen.tf Scommaaccent scommaaccent Tcommaaccent tcommaaccent florin.tf Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr becyr.locl vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf comma period zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
@calt = [zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf];
@calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups = [zero one two three four five six seven eight nine];
@ccmp = [gravecomb acutecomb circumflexcomb tildecomb macroncomb brevecomb dotaccentcomb dieresiscomb ringcomb hungarumlautcomb caroncomb hookabovecomb dblgravecomb breveinvertedcomb];
@dnom_frac = [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
@frac_numr = [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
@lnum_onum = [zero.osf one.osf two.osf three.osf four.osf five.osf six.osf seven.osf eight.osf nine.osf];
@locl = [Decyr Zhecyr Kacyr Elcyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr];
@locl2 = [Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr];
@pnum = [comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf];
@pnum2 = [comma period zero one two three four five six seven eight nine];
@sinf_subs = [zero.subs one.subs two.subs three.subs four.subs five.subs six.subs seven.subs eight.subs nine.subs];
@sups = [onesuperior twosuperior threesuperior];
@tnum = [dollar comma period zero one two three four five six seven eight nine colon semicolon cent sterling yen florin];
@tnum2 = [dollar.tf comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf colon.tf semicolon.tf cent.tf sterling.tf yen.tf florin.tf colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf];
#/< otclasses
#< classes

#/> classes
#/> otclasses
@aalt = [dollar comma period slash colon semicolon A O a g i l o cent sterling yen Scedilla scedilla Tcedilla tcedilla florin Decyr Zhecyr Kacyr Elcyr becyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr indianrupee turkishlira comma.tf period.tf zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
@aalt2 = [dollar.tf comma.tf period.tf fraction colon.tf semicolon.tf ordfeminine ordmasculine ordfeminine g.ss01 idotaccent l.ss01 ordmasculine cent.tf sterling.tf yen.tf Scommaaccent scommaaccent Tcommaaccent tcommaaccent florin.tf Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr becyr.locl vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf comma period zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
@calt = [zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf];
@calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups = [zero one two three four five six seven eight nine];
@ccmp = [gravecomb acutecomb circumflexcomb tildecomb macroncomb brevecomb dotaccentcomb dieresiscomb ringcomb hungarumlautcomb caroncomb hookabovecomb dblgravecomb breveinvertedcomb];
@dnom_frac = [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
@frac_numr = [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
@lnum_onum = [zero.osf one.osf two.osf three.osf four.osf five.osf six.osf seven.osf eight.osf nine.osf];
@locl = [Decyr Zhecyr Kacyr Elcyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr];
@locl2 = [Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr];
@pnum = [comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf];
@pnum2 = [comma period zero one two three four five six seven eight nine];
@sinf_subs = [zero.subs one.subs two.subs three.subs four.subs five.subs six.subs seven.subs eight.subs nine.subs];
@sups = [onesuperior twosuperior threesuperior];
@tnum = [dollar comma period zero one two three four five six seven eight nine colon semicolon cent sterling yen florin indianrupee turkishlira];
@tnum2 = [dollar.tf comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf colon.tf semicolon.tf cent.tf sterling.tf yen.tf florin.tf colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf];
#/< otclasses
#/< classes

#/> classes
#/> otclasses
@aalt = [dollar comma period slash colon semicolon A O a g i l o cent sterling yen Scedilla scedilla Tcedilla tcedilla florin Decyr Zhecyr Kacyr Elcyr becyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr indianrupee turkishlira comma.tf period.tf zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
@aalt2 = [dollar.tf comma.tf period.tf fraction colon.tf semicolon.tf ordfeminine ordmasculine ordfeminine g.ss01 idotaccent l.ss01 ordmasculine cent.tf sterling.tf yen.tf Scommaaccent scommaaccent Tcommaaccent tcommaaccent florin.tf Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr becyr.locl vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf comma period zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
@calt = [zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf];
@calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups = [zero one two three four five six seven eight nine];
@ccmp = [gravecomb acutecomb circumflexcomb tildecomb macroncomb brevecomb dotaccentcomb dieresiscomb ringcomb hungarumlautcomb caroncomb hookabovecomb dblgravecomb breveinvertedcomb];
@dnom_frac = [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
@frac_numr = [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
@lnum_onum = [zero.osf one.osf two.osf three.osf four.osf five.osf six.osf seven.osf eight.osf nine.osf];
@locl = [Decyr Zhecyr Kacyr Elcyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr];
@locl2 = [Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr];
@pnum = [comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf];
@pnum2 = [comma period zero one two three four five six seven eight nine];
@sinf_subs = [zero.subs one.subs two.subs three.subs four.subs five.subs six.subs seven.subs eight.subs nine.subs];
@sups = [onesuperior twosuperior threesuperior];
@tnum = [dollar comma period zero one two three four five six seven eight nine colon semicolon cent sterling yen florin indianrupee turkishlira];
@tnum2 = [dollar.tf comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf colon.tf semicolon.tf cent.tf sterling.tf yen.tf florin.tf colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf];
#/< otclasses
#/< classes

#/> classes
#/> otclasses
@aalt = [dollar comma period slash colon semicolon A O a g i l o cent sterling yen Scedilla scedilla Tcedilla tcedilla florin Decyr Zhecyr Kacyr Elcyr becyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr indianrupee turkishlira comma.tf period.tf zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
@aalt2 = [dollar.tf comma.tf period.tf fraction colon.tf semicolon.tf ordfeminine ordmasculine ordfeminine g.ss01 idotaccent l.ss01 ordmasculine cent.tf sterling.tf yen.tf Scommaaccent scommaaccent Tcommaaccent tcommaaccent florin.tf Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr becyr.locl vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf comma period zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
@calt = [zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf];
@calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups = [zero one two three four five six seven eight nine];
@ccmp = [gravecomb acutecomb circumflexcomb tildecomb macroncomb brevecomb dotaccentcomb dieresiscomb ringcomb hungarumlautcomb caroncomb hookabovecomb dblgravecomb breveinvertedcomb];
@dnom_frac = [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
@frac_numr = [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
@lnum_onum = [zero.osf one.osf two.osf three.osf four.osf five.osf six.osf seven.osf eight.osf nine.osf];
@locl = [Decyr Zhecyr Kacyr Elcyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr];
@locl2 = [Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr];
@pnum = [comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf];
@pnum2 = [comma period zero one two three four five six seven eight nine];
@sinf_subs = [zero.subs one.subs two.subs three.subs four.subs five.subs six.subs seven.subs eight.subs nine.subs];
@sups = [zero.superior onesuperior twosuperior threesuperior four.superior five.superior six.superior seven.superior eight.superior nine.superior];
@tnum = [dollar comma period zero one two three four five six seven eight nine colon semicolon cent sterling yen florin indianrupee turkishlira];
@tnum2 = [dollar.tf comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf colon.tf semicolon.tf cent.tf sterling.tf yen.tf florin.tf colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf];
#/< otclasses
#/< classes

#/> classes
#/> otclasses
@aalt = [dollar comma period slash colon semicolon A O a g i l o cent sterling yen Scedilla scedilla Tcedilla tcedilla florin Decyr Zhecyr Kacyr Elcyr becyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr won dong Euro indianrupee turkishlira comma.tf period.tf zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
@aalt2 = [dollar.tf comma.tf period.tf fraction colon.tf semicolon.tf ordfeminine ordmasculine ordfeminine g.ss01 idotaccent l.ss01 ordmasculine cent.tf sterling.tf yen.tf Scommaaccent scommaaccent Tcommaaccent tcommaaccent florin.tf Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr becyr.locl vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf comma period zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
@calt = [zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf];
@calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups = [zero one two three four five six seven eight nine];
@ccmp = [gravecomb acutecomb circumflexcomb tildecomb macroncomb brevecomb dotaccentcomb dieresiscomb ringcomb hungarumlautcomb caroncomb hookabovecomb dblgravecomb breveinvertedcomb];
@dnom_frac = [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
@frac_numr = [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
@lnum_onum = [zero.osf one.osf two.osf three.osf four.osf five.osf six.osf seven.osf eight.osf nine.osf];
@locl = [Decyr Zhecyr Kacyr Elcyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr];
@locl2 = [Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr];
@pnum = [comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf];
@pnum2 = [comma period zero one two three four five six seven eight nine];
@sinf_subs = [zero.subs one.subs two.subs three.subs four.subs five.subs six.subs seven.subs eight.subs nine.subs];
@sups = [zero.superior onesuperior twosuperior threesuperior four.superior five.superior six.superior seven.superior eight.superior nine.superior];
@tnum = [dollar comma period zero one two three four five six seven eight nine colon semicolon cent sterling yen florin won dong Euro indianrupee turkishlira];
@tnum2 = [dollar.tf comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf colon.tf semicolon.tf cent.tf sterling.tf yen.tf florin.tf colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf];
#/< otclasses
#/< classes

#/> classes
#/> otclasses
@aalt = [dollar comma period slash colon semicolon A O a g i l o cent sterling yen Scedilla scedilla Tcedilla tcedilla florin Decyr Zhecyr Kacyr Elcyr becyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr colonmonetary franc lira won dong Euro indianrupee turkishlira comma.tf period.tf zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
@aalt2 = [dollar.tf comma.tf period.tf fraction colon.tf semicolon.tf ordfeminine ordmasculine ordfeminine g.ss01 idotaccent l.ss01 ordmasculine cent.tf sterling.tf yen.tf Scommaaccent scommaaccent Tcommaaccent tcommaaccent florin.tf Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr becyr.locl vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf comma period zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
@calt = [zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf];
@calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups = [zero one two three four five six seven eight nine];
@ccmp = [gravecomb acutecomb circumflexcomb tildecomb macroncomb brevecomb dotaccentcomb dieresiscomb ringcomb hungarumlautcomb caroncomb hookabovecomb dblgravecomb breveinvertedcomb];
@dnom_frac = [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
@frac_numr = [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
@lnum_onum = [zero.osf one.osf two.osf three.osf four.osf five.osf six.osf seven.osf eight.osf nine.osf];
@locl = [Decyr Zhecyr Kacyr Elcyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr];
@locl2 = [Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr];
@pnum = [comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf];
@pnum2 = [comma period zero one two three four five six seven eight nine];
@sinf_subs = [zero.subs one.subs two.subs three.subs four.subs five.subs six.subs seven.subs eight.subs nine.subs];
@sups = [zero.superior onesuperior twosuperior threesuperior four.superior five.superior six.superior seven.superior eight.superior nine.superior];
@tnum = [dollar comma period zero one two three four five six seven eight nine colon semicolon cent sterling yen florin colonmonetary franc lira won dong Euro indianrupee turkishlira];
@tnum2 = [dollar.tf comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf colon.tf semicolon.tf cent.tf sterling.tf yen.tf florin.tf colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf];
#/< otclasses
#/< classes

#/> classes
#/> otclasses
@aalt = [dollar comma period slash colon semicolon A O a g i l o cent sterling yen Scedilla scedilla Tcedilla tcedilla florin Decyr Zhecyr Kacyr Elcyr becyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr colonmonetary franc lira won dong Euro indianrupee turkishlira comma.tf period.tf zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
@aalt2 = [dollar.tf comma.tf period.tf fraction colon.tf semicolon.tf ordfeminine ordmasculine ordfeminine g.ss01 idotaccent l.ss01 ordmasculine cent.tf sterling.tf yen.tf Scommaaccent scommaaccent Tcommaaccent tcommaaccent florin.tf Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr becyr.locl vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf comma period zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
@calt = [zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf];
@calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups = [zero one two three four five six seven eight nine];
@ccmp = [gravecomb acutecomb circumflexcomb tildecomb macroncomb brevecomb dotaccentcomb dieresiscomb ringcomb hungarumlautcomb caroncomb hookabovecomb dblgravecomb breveinvertedcomb];
@dnom_frac = [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
@frac_numr = [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
@lnum_onum = [zero.osf one.osf two.osf three.osf four.osf five.osf six.osf seven.osf eight.osf nine.osf];
@locl = [Decyr Zhecyr Kacyr Elcyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr];
@locl2 = [Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr];
@pnum = [comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf];
@pnum2 = [comma period zero one two three four five six seven eight nine];
@sinf_subs = [zero.subs one.subs two.subs three.subs four.subs five.subs six.subs seven.subs eight.subs nine.subs];
@sups = [zero.superior onesuperior twosuperior threesuperior four.superior five.superior six.superior seven.superior eight.superior nine.superior];
@tnum = [dollar comma period zero one two three four five six seven eight nine colon semicolon cent sterling yen florin colonmonetary franc lira won dong Euro indianrupee turkishlira];
@tnum2 = [dollar.tf comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf colon.tf semicolon.tf cent.tf sterling.tf yen.tf florin.tf colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf];
#/< otclasses
#/< classes

#/> classes
#/> otclasses
@aalt = [dollar comma period slash colon semicolon A O a g i l o cent sterling yen Scedilla scedilla Tcedilla tcedilla florin Decyr Zhecyr Kacyr Elcyr becyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr colonmonetary franc lira won dong Euro indianrupee turkishlira comma.tf period.tf zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
@aalt2 = [dollar.tf comma.tf period.tf fraction colon.tf semicolon.tf ordfeminine ordmasculine ordfeminine g.ss01 idotaccent l.ss01 ordmasculine cent.tf sterling.tf yen.tf Scommaaccent scommaaccent Tcommaaccent tcommaaccent florin.tf Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr becyr.locl vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf comma period zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
@calt = [zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf];
@calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups = [zero one two three four five six seven eight nine];
@ccmp = [gravecomb acutecomb circumflexcomb tildecomb macroncomb brevecomb dotaccentcomb dieresiscomb ringcomb hungarumlautcomb caroncomb hookabovecomb dblgravecomb breveinvertedcomb];
@dnom_frac = [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
@frac_numr = [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
@lnum_onum = [zero.osf one.osf two.osf three.osf four.osf five.osf six.osf seven.osf eight.osf nine.osf];
@locl = [Decyr Zhecyr Kacyr Elcyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr];
@locl2 = [Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr];
@pnum = [comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf];
@pnum2 = [comma period zero one two three four five six seven eight nine];
@sinf_subs = [zero.subs one.subs two.subs three.subs four.subs five.subs six.subs seven.subs eight.subs nine.subs];
@sups = [zero.superior onesuperior twosuperior threesuperior four.superior five.superior six.superior seven.superior eight.superior nine.superior];
@tnum = [dollar comma period zero one two three four five six seven eight nine colon semicolon cent sterling yen florin colonmonetary franc lira won dong Euro indianrupee turkishlira];
@tnum2 = [dollar.tf comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf colon.tf semicolon.tf cent.tf sterling.tf yen.tf florin.tf colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf];
#/< otclasses
#/< classes

#/> classes
#/> otclasses
@aalt = [dollar comma period slash colon semicolon A O a g i l o cent sterling yen Scedilla scedilla Tcedilla tcedilla florin Decyr Zhecyr Kacyr Elcyr becyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr colonmonetary franc lira won dong Euro indianrupee turkishlira comma.tf period.tf zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
@aalt2 = [dollar.tf comma.tf period.tf fraction colon.tf semicolon.tf ordfeminine ordmasculine ordfeminine g.ss01 idotaccent l.ss01 ordmasculine cent.tf sterling.tf yen.tf Scommaaccent scommaaccent Tcommaaccent tcommaaccent florin.tf Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr becyr.locl vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf comma period zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
@calt = [zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf];
@calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups = [zero one two three four five six seven eight nine];
@ccmp = [gravecomb acutecomb circumflexcomb tildecomb macroncomb brevecomb dotaccentcomb dieresiscomb ringcomb hungarumlautcomb caroncomb hookabovecomb dblgravecomb breveinvertedcomb];
@dnom_frac = [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
@frac_numr = [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
@lnum_onum = [zero.osf one.osf two.osf three.osf four.osf five.osf six.osf seven.osf eight.osf nine.osf];
@locl = [Decyr Zhecyr Kacyr Elcyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr];
@locl2 = [Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr];
@pnum = [comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf];
@pnum2 = [comma period zero one two three four five six seven eight nine];
@sinf_subs = [zero.subs one.subs two.subs three.subs four.subs five.subs six.subs seven.subs eight.subs nine.subs];
@sups = [zero.superior onesuperior twosuperior threesuperior four.superior five.superior six.superior seven.superior eight.superior nine.superior];
@tnum = [dollar comma period zero one two three four five six seven eight nine colon semicolon cent sterling yen florin colonmonetary franc lira won dong Euro indianrupee turkishlira];
@tnum2 = [dollar.tf comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf colon.tf semicolon.tf cent.tf sterling.tf yen.tf florin.tf colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf];
#/< otclasses
#/< classes

#/> classes
#/> otclasses
@aalt = [dollar comma period slash colon semicolon A O a g i l o cent sterling yen Scedilla scedilla Tcedilla tcedilla florin Decyr Zhecyr Kacyr Elcyr becyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr colonmonetary franc lira won dong Euro indianrupee turkishlira comma.tf period.tf zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
@aalt2 = [dollar.tf comma.tf period.tf fraction colon.tf semicolon.tf ordfeminine ordmasculine ordfeminine g.ss01 idotaccent l.ss01 ordmasculine cent.tf sterling.tf yen.tf Scommaaccent scommaaccent Tcommaaccent tcommaaccent florin.tf Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr becyr.locl vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf comma period zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
@calt = [zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf];
@calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups = [zero one two three four five six seven eight nine];
@ccmp = [gravecomb acutecomb circumflexcomb tildecomb macroncomb brevecomb dotaccentcomb dieresiscomb ringcomb hungarumlautcomb caroncomb hookabovecomb dblgravecomb breveinvertedcomb];
@dnom_frac = [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
@frac_numr = [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
@lnum_onum = [zero.osf one.osf two.osf three.osf four.osf five.osf six.osf seven.osf eight.osf nine.osf];
@locl = [Decyr Zhecyr Kacyr Elcyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr];
@locl2 = [Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr];
@pnum = [comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf];
@pnum2 = [comma period zero one two three four five six seven eight nine];
@sinf_subs = [zero.subs one.subs two.subs three.subs four.subs five.subs six.subs seven.subs eight.subs nine.subs];
@sups = [zero.superior onesuperior twosuperior threesuperior four.superior five.superior six.superior seven.superior eight.superior nine.superior];
@tnum = [dollar comma period zero one two three four five six seven eight nine colon semicolon cent sterling yen florin colonmonetary franc lira won dong Euro indianrupee turkishlira];
@tnum2 = [dollar.tf comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf colon.tf semicolon.tf cent.tf sterling.tf yen.tf florin.tf colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf];
#/< otclasses
#/< classes

#/> classes
#/> otclasses
@aalt = [dollar comma period slash colon semicolon A O a g i l o cent sterling yen Scedilla scedilla Tcedilla tcedilla florin Decyr Zhecyr Kacyr Elcyr becyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr colonmonetary franc lira won dong Euro indianrupee turkishlira comma.tf period.tf zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
@aalt2 = [dollar.tf comma.tf period.tf fraction colon.tf semicolon.tf ordfeminine ordmasculine ordfeminine g.ss01 idotaccent l.ss01 ordmasculine cent.tf sterling.tf yen.tf Scommaaccent scommaaccent Tcommaaccent tcommaaccent florin.tf Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr becyr.locl vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf comma period zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
@calt = [zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf];
@calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups = [zero one two three four five six seven eight nine];
@ccmp = [gravecomb acutecomb circumflexcomb tildecomb macroncomb brevecomb dotaccentcomb dieresiscomb ringcomb hungarumlautcomb caroncomb hookabovecomb dblgravecomb breveinvertedcomb];
@dnom_frac = [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
@frac_numr = [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
@lnum_onum = [zero.osf one.osf two.osf three.osf four.osf five.osf six.osf seven.osf eight.osf nine.osf];
@locl = [Decyr Zhecyr Kacyr Elcyr vecyr gecyr decyr zhecyr zecyr ishortcyr kacyr elcyr encyr pecyr tecyr tsecyr checyr shacyr shchacyr hardcyr softcyr yucyr];
@locl2 = [Decyr.bgr Zhecyr.bgr Kacyr.bgr Elcyr.bgr vecyr.bgr gecyr.bgr decyr.bgr zhecyr.bgr zecyr.bgr ishortcyr.bgr kacyr.bgr elcyr.bgr encyr.bgr pecyr.bgr tecyr.bgr tsecyr.bgr checyr.bgr shacyr.bgr shchacyr.bgr hardcyr.bgr softcyr.bgr yucyr.bgr];
@pnum = [comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf];
@pnum2 = [comma period zero one two three four five six seven eight nine];
@sinf_subs = [zero.subs one.subs two.subs three.subs four.subs five.subs six.subs seven.subs eight.subs nine.subs];
@sups = [zero.superior onesuperior twosuperior threesuperior four.superior five.superior six.superior seven.superior eight.superior nine.superior];
@tnum = [dollar comma period zero one two three four five six seven eight nine colon semicolon cent sterling yen florin colonmonetary franc lira won dong Euro indianrupee turkishlira];
@tnum2 = [dollar.tf comma.tf period.tf zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf colon.tf semicolon.tf cent.tf sterling.tf yen.tf florin.tf colonsign.tf franc.tf lira.tf won.tf dong.tf Euro.tf indianrupee.tf turkishlira.tf];
#/< otclasses
#/< classes

###
# OpenType Layout feature definitions
# Format: Adobe FDK for OpenType (AFDKO) version 2.5
# Generated on: 2024-4-3 16:40
# Generated by: FontLab 8.0.0
# Font PostScript name: CSNSansVF-ExtraLight
# Font copyright: Copyright (c) 2015, Impallari Type (www.impallari.com)Copyright 2020-2023 The Public Sans Project Authors (https://github.com/uswds/public-sans)Copyright 2011-2023 The Roboto Flex Project Authors (https://github.com/googlefonts/roboto-flex)Copyright 2020-2023 The CSN Sans Project Authors
#
# Totals:
# Languagesystems: 13
# GSUB lookups: 37
# GSUB features: 18 (aalt, calt, ccmp, dnom, frac, liga, lnum, locl, numr, onum, ordn, pnum, salt, sinf, ss01, subs, sups, tnum)
# GPOS lookups: 1
# GPOS features: 1 (kern)

#
# Languagesystem definitions
#

languagesystem DFLT dflt; # Default default
languagesystem latn dflt; # Latin default
languagesystem latn AZE ; # Latin Azerbaijani
languagesystem latn CAT ; # Latin Catalan
languagesystem latn CRT ; # Latin Crimean Tatar
languagesystem latn KAZ ; # Latin Kazakh
languagesystem latn MOL ; # Latin Moldavian
languagesystem latn ROM ; # Latin Romanian
languagesystem latn TAT ; # Latin Tatar
languagesystem latn TRK ; # Latin Turkish
languagesystem cyrl BGR ; # Cyrillic Bulgarian
languagesystem cyrl SRB ; # Cyrillic Serbian
languagesystem cyrl TAT ; # Cyrillic Tatar

#
# Lookup definitions
#


#
# Feature definitions
#



";
tag = Languagesystems;
}
);
features = (
{
code = "# GSUB feature: Access All Alternates
# Lookups: 2

  sub @aalt by @aalt2;
  sub zero from [zero.subs zero.superior zero.numr zero.dnom zero.tf zero.osf];
  sub one from [one.subs onesuperior one.numr one.dnom one.tf one.osf];
  sub two from [two.subs twosuperior two.numr two.dnom two.tf two.osf];
  sub three from [three.subs threesuperior three.numr three.dnom three.tf three.osf];
  sub four from [four.subs four.superior four.numr four.dnom four.tf four.osf];
  sub five from [five.subs five.superior five.numr five.dnom five.tf five.osf];
  sub six from [six.subs six.superior six.numr six.dnom six.tf six.osf];
  sub seven from [seven.subs seven.superior seven.numr seven.dnom seven.tf seven.osf];
  sub eight from [eight.subs eight.superior eight.numr eight.dnom eight.tf eight.osf];
  sub nine from [nine.subs nine.superior nine.numr nine.dnom nine.tf nine.osf];
  sub zero.osf from [zero];
  sub zero.tf from [zero];
  sub one.osf from [one];
  sub one.tf from [one];
  sub two.osf from [two];
  sub two.tf from [two];
  sub three.osf from [three];
  sub three.tf from [three];
  sub four.osf from [four];
  sub four.tf from [four];
  sub five.osf from [five];
  sub five.tf from [five];
  sub six.osf from [six];
  sub six.tf from [six];
  sub seven.osf from [seven];
  sub seven.tf from [seven];
  sub eight.osf from [eight];
  sub eight.tf from [eight];
  sub nine.osf from [nine];
  sub nine.tf from [nine];";
tag = aalt;
},
{
code = "# GSUB feature: Glyph Composition / Decomposition
# Lookups: 2

  sub [i j]' @ccmp by [dotlessi dotlessj];
  sub [i j]' [horncomb dotbelowcomb cedillacomb ogonekcomb] @ccmp by [dotlessi dotlessj];
  sub circumflexcomb gravecomb by circumflexcomb_gravecomb;
  sub circumflexcomb acutecomb by circumflexcomb_acutecomb;
  sub circumflexcomb tildecomb by circumflexcomb_tildecomb;
  sub circumflexcomb hookabovecomb by circumflexcomb_hookabovecomb;
  sub brevecomb gravecomb by brevecomb_gravecomb;
  sub brevecomb acutecomb by brevecomb_acutecomb;
  sub brevecomb tildecomb by brevecomb_tildecomb;
  sub brevecomb hookabovecomb by brevecomb_hookabovecomb;";
tag = ccmp;
},
{
code = "# GSUB feature: Localized Forms
# Lookups: 10

  script latn; # Latin
    language AZE ; # Azerbaijani
    sub i by idotaccent;

    language TRK ; # Turkish
    sub i by idotaccent;

    language MOL ; # Moldavian
    sub [Scedilla scedilla Tcedilla tcedilla] by [Scommaaccent scommaaccent Tcommaaccent tcommaaccent];

    language ROM ; # Romanian
    sub [Scedilla scedilla Tcedilla tcedilla] by [Scommaaccent scommaaccent Tcommaaccent tcommaaccent];

    language CAT ; # Catalan
    sub l' periodcentered' l by ldot;
    sub L' periodcentered' L by Ldot;

    language TAT ; # Tatar
    sub i by idotaccent;

    language CRT ; # Crimean Tatar
    sub i by idotaccent;

    language KAZ ; # Kazakh
    sub i by idotaccent;


  script cyrl; # Cyrillic
    language SRB ; # Serbian
    sub becyr by becyr.locl;

    language MKD ; # Serbian
    sub becyr by becyr.locl;

    language BGR ; # Bulgarian
    sub @locl by @locl2;";
tag = locl;
},
{
code = "# GSUB feature: Subscript
# Lookups: 1

  sub @calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups by @sinf_subs;";
tag = subs;
},
{
code = "# GSUB feature: Scientific Inferiors
# Lookups: 1

  sub @calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups by @sinf_subs;";
tag = sinf;
},
{
code = "# GSUB feature: Superscript
# Lookups: 1

  sub @calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups by @sups;";
tag = sups;
},
{
code = "# GSUB feature: Numerators
# Lookups: 1

  sub @calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups by @frac_numr;";
tag = numr;
},
{
code = "# GSUB feature: Denominators
# Lookups: 1

  sub @calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups by @dnom_frac;";
tag = dnom;
},
{
code = "# GSUB feature: Fractions
# Lookups: 3

  sub slash by fraction;
  sub @calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups by @frac_numr;
  sub fraction @frac_numr' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
  sub @dnom_frac @frac_numr' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];";
tag = frac;
},
{
code = "# GSUB feature: Ordinals
# Lookups: 2

  sub @calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups [A a]' by [ordfeminine ordfeminine];
  sub @calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups [O o]' by [ordmasculine ordmasculine];
  sub N o period by numero;";
tag = ordn;
},
{
code = "# GSUB feature: Lining Figures
# Lookups: 1

  sub @lnum_onum by @calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups;";
tag = lnum;
},
{
code = "# GSUB feature: Proportional Figures
# Lookups: 1

  sub @pnum by @pnum2;";
tag = pnum;
},
{
code = "# GSUB feature: Tabular Figures
# Lookups: 1

  sub @tnum by @tnum2;";
tag = tnum;
},
{
code = "# GSUB feature: Oldstyle Figures
# Lookups: 1

  sub @calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups by @lnum_onum;";
tag = onum;
},
{
code = "# GSUB feature: Standard Ligatures
# Lookups: 1

  sub f i by fi;
  sub f l by fl;
  sub colon f l a g two colon by colon_f_l_a_g_two_colon.liga;
  sub colon f l a g colon by colon_f_l_a_g_colon.liga;
  sub colon one eight F colon by colon_one_eight_F_colon.liga;";
tag = liga;
},
{
code = "# GSUB feature: Stylistic Alternates
# Lookups: 1

  sub [g l] by [g.ss01 l.ss01];";
tag = salt;
},
{
code = "# GSUB feature: Stylistic Set 1
# Lookups: 1

  sub [g l] by [g.ss01 l.ss01];";
tag = ss01;
},
{
code = "# GSUB feature: Contextual Alternates
# Lookups: 1

  sub space emdash' space by emdash.alt;
  sub @calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups colon' @calt_dnom_frac_lnum_numr_onum_ordn_sinf_subs_sups by colon.case;
  sub @calt colon.tf' @calt by colon.tf.case;";
tag = calt;
},
{
code = "#> feature
# GPOS feature : Mark Positioning
    markClass acutecomb <anchor 27 517> @top;

  lookup markLTR {
      pos base Eukrcyr
          <anchor 329 723> mark @top;
      pos base Icyr
          <anchor 346 723> mark @top;
      pos base Ucyr
          <anchor 298 723> mark @top;
      pos base Ereversedcyr
          <anchor 329 723> mark @top;
      pos base Yucyr
          <anchor 483 723> mark @top;
      pos base Yacyr
          <anchor 256 723> mark @top;
      pos base icyr
          <anchor 278 517> mark @top;
      pos base ylongcyr
          <anchor 341 517> mark @top;
      pos base ereversedcyr
          <anchor 244 517> mark @top;
      pos base yucyr
          <anchor 404 517> mark @top;
      pos base yacyr
          <anchor 238 517> mark @top;
      pos base eukrcyr
          <anchor 260 517> mark @top;
  } markLTR;

  lookup markLTR;
#< feature";
tag = mark;
}
);
fontMaster = (
{
axesValues = (
100
);
customParameters = (
{
name = typoAscender;
value = 967;
},
{
name = typoDescender;
value = -225;
},
{
name = typoLineGap;
value = 66;
},
{
name = winAscent;
value = 1000;
},
{
name = winDescent;
value = 258;
},
{
name = underlineThickness;
value = 50;
},
{
name = underlinePosition;
value = -100;
},
{
name = strikeoutPosition;
value = 300;
},
{
name = strikeoutSize;
value = 50;
},
{
name = subscriptXOffset;
value = 0;
},
{
name = subscriptXSize;
value = 650;
},
{
name = subscriptYOffset;
value = 75;
},
{
name = subscriptYSize;
value = 600;
},
{
name = superscriptXOffset;
value = 0;
},
{
name = superscriptXSize;
value = 650;
},
{
name = superscriptYOffset;
value = 350;
},
{
name = superscriptYSize;
value = 600;
},
{
name = hheaAscender;
value = 950;
},
{
name = hheaDescender;
value = -225;
},
{
name = hheaLineGap;
value = 0;
}
);
guides = (
{
position = "{0, 250}";
}
);
id = "F85293C6-8FE1-4D29-8E83-66190DA06428";
metricValues = (
{
pos = 967;
},
{
pos = 742;
},
{
pos = -225;
},
{
pos = 0;
},
{
pos = 530;
}
);
iconName = Light;
name = Light;
},
{
axesValues = (
400
);
customParameters = (
{
name = typoAscender;
value = 967;
},
{
name = typoDescender;
value = -225;
},
{
name = typoLineGap;
value = 66;
},
{
name = winAscent;
value = 1000;
},
{
name = winDescent;
value = 258;
},
{
name = underlineThickness;
value = 50;
},
{
name = underlinePosition;
value = -100;
},
{
name = strikeoutPosition;
value = 300;
},
{
name = strikeoutSize;
value = 50;
},
{
name = subscriptXOffset;
value = 0;
},
{
name = subscriptXSize;
value = 650;
},
{
name = subscriptYOffset;
value = 75;
},
{
name = subscriptYSize;
value = 600;
},
{
name = superscriptXOffset;
value = 0;
},
{
name = superscriptXSize;
value = 650;
},
{
name = superscriptYOffset;
value = 350;
},
{
name = superscriptYSize;
value = 600;
},
{
name = hheaAscender;
value = 950;
},
{
name = hheaDescender;
value = -225;
},
{
name = hheaLineGap;
value = 0;
}
);
guides = (
{
position = "{0, 250}";
}
);
id = "84E72C1A-4249-4129-A9E3-B383380F4618";
metricValues = (
{
pos = 967;
},
{
pos = 742;
},
{
pos = -225;
},
{
pos = 0;
},
{
pos = 530;
}
);
},
{
axesValues = (
900
);
customParameters = (
{
name = typoAscender;
value = 967;
},
{
name = typoDescender;
value = -225;
},
{
name = typoLineGap;
value = 66;
},
{
name = winAscent;
value = 1000;
},
{
name = winDescent;
value = 258;
},
{
name = underlineThickness;
value = 50;
},
{
name = underlinePosition;
value = -100;
},
{
name = strikeoutPosition;
value = 300;
},
{
name = strikeoutSize;
value = 50;
},
{
name = subscriptXOffset;
value = 0;
},
{
name = subscriptXSize;
value = 650;
},
{
name = subscriptYOffset;
value = 75;
},
{
name = subscriptYSize;
value = 600;
},
{
name = superscriptXOffset;
value = 0;
},
{
name = superscriptXSize;
value = 650;
},
{
name = superscriptYOffset;
value = 350;
},
{
name = superscriptYSize;
value = 600;
},
{
name = hheaAscender;
value = 950;
},
{
name = hheaDescender;
value = -225;
},
{
name = hheaLineGap;
value = 0;
}
);
id = "01327C5C-830D-4CC3-9E97-2D6CCD6A61F0";
metricValues = (
{
pos = 967;
},
{
pos = 742;
},
{
pos = -225;
},
{
pos = 0;
},
{
pos = 530;
}
);
iconName = Bold;
name = Bold;
}
);
instances = (
{
axesValues = (
100
);
interpolationWeight = 100;
name = Thin;
weightClass = Thin;
},
{
axesValues = (
200
);
interpolationWeight = 200;
name = ExtraLight;
weightClass = ExtraLight;
},
{
axesValues = (
300
);
interpolationWeight = 300;
name = Light;
weightClass = Light;
},
{
axesValues = (
400
);
interpolationWeight = 400;
name = Regular;
},
{
axesValues = (
500
);
interpolationWeight = 500;
name = Medium;
weightClass = Medium;
},
{
axesValues = (
600
);
interpolationWeight = 600;
name = SemiBold;
weightClass = SemiBold;
},
{
axesValues = (
700
);
interpolationWeight = 700;
name = Bold;
weightClass = Bold;
},
{
axesValues = (
800
);
interpolationWeight = 800;
name = ExtraBold;
weightClass = ExtraBold;
},
{
axesValues = (
900
);
interpolationWeight = 900;
name = Black;
weightClass = Black;
}
);
kerningLTR = {
"01327C5C-830D-4CC3-9E97-2D6CCD6A61F0" = {
"@MMK_L_A" = {
"@MMK_R_A2" = 25;
"@MMK_R_C2" = -35;
"@MMK_R_J2" = 25;
"@MMK_R_Oslash2" = 15;
"@MMK_R_S2" = -15;
"@MMK_R_T2" = -85;
"@MMK_R_U" = -45;
"@MMK_R_V2" = -107;
"@MMK_R_Wgrave2" = -73;
"@MMK_R_Y2" = -98;
"@MMK_R_c" = -20;
"@MMK_R_g2" = -10;
"@MMK_R_hyphen2" = -30;
"@MMK_R_question" = 20;
"@MMK_R_quoteright2" = -117;
"@MMK_R_s2" = -15;
"@MMK_R_seven2" = -45;
"@MMK_R_t2" = -45;
"@MMK_R_u" = -15;
"@MMK_R_v2" = -80;
"@MMK_R_z2" = 10;
X = 20;
f = -35;
x = -20;
};
"@MMK_L_C" = {
"@MMK_R_A2" = -30;
"@MMK_R_AE" = -78;
"@MMK_R_T2" = -5;
"@MMK_R_V2" = -30;
"@MMK_R_Wgrave2" = -10;
"@MMK_R_Y2" = -30;
"@MMK_R_Z2" = -20;
"@MMK_R_a2" = -20;
"@MMK_R_c" = 5;
"@MMK_R_emdash2" = 30;
"@MMK_R_g2" = -10;
"@MMK_R_z2" = -5;
X = -40;
};
"@MMK_L_D" = {
"@MMK_R_A2" = -35;
"@MMK_R_S2" = -10;
"@MMK_R_V2" = -40;
"@MMK_R_Y2" = -50;
"@MMK_R_Z2" = -45;
"@MMK_R_comma2" = -40;
X = -45;
};
"@MMK_L_E" = {
"@MMK_R_A2" = 10;
"@MMK_R_AE" = -25;
"@MMK_R_C2" = -5;
"@MMK_R_J2" = 15;
"@MMK_R_S2" = 10;
"@MMK_R_T2" = 30;
"@MMK_R_V2" = 10;
"@MMK_R_Wgrave2" = 20;
"@MMK_R_Y2" = 20;
"@MMK_R_bar" = 30;
"@MMK_R_emdash2" = 60;
"@MMK_R_g2" = -10;
"@MMK_R_hyphen2" = -20;
"@MMK_R_question" = 10;
"@MMK_R_t2" = -15;
"@MMK_R_u" = -10;
"@MMK_R_v2" = -15;
"@MMK_R_z2" = 10;
X = 20;
};
"@MMK_L_F" = {
"@MMK_R_A2" = -70;
"@MMK_R_J2" = -50;
"@MMK_R_S2" = -10;
"@MMK_R_T2" = 40;
"@MMK_R_Wgrave2" = 30;
"@MMK_R_Y2" = 30;
"@MMK_R_Z2" = -20;
"@MMK_R_a2" = -10;
"@MMK_R_c" = -25;
"@MMK_R_comma2" = -95;
"@MMK_R_g2" = -10;
"@MMK_R_question" = 30;
"@MMK_R_s2" = -15;
"@MMK_R_t2" = 10;
"@MMK_R_u" = -10;
"@MMK_R_v2" = -10;
quotesinglbase = -67;
x = -30;
};
"@MMK_L_G" = {
"@MMK_R_A2" = 10;
"@MMK_R_J2" = 10;
"@MMK_R_Oslash2" = 10;
"@MMK_R_T2" = -25;
"@MMK_R_V2" = -40;
"@MMK_R_Wgrave2" = -30;
"@MMK_R_Y2" = -60;
};
"@MMK_L_H" = {
"@MMK_R_U" = -15;
"@MMK_R_c" = -20;
"@MMK_R_emdash2" = 40;
"@MMK_R_t2" = -15;
};
"@MMK_L_J" = {
"@MMK_R_A2" = -45;
"@MMK_R_AE" = -83;
"@MMK_R_comma2" = -30;
"@MMK_R_g2" = -10;
};
"@MMK_L_K" = {
"@MMK_R_A2" = 20;
"@MMK_R_J2" = 20;
"@MMK_R_S2" = -40;
"@MMK_R_T2" = 10;
"@MMK_R_U" = -25;
"@MMK_R_V2" = 30;
"@MMK_R_Y2" = 20;
"@MMK_R_a2" = -15;
"@MMK_R_c" = -35;
"@MMK_R_hyphen2" = -67;
"@MMK_R_s2" = -20;
"@MMK_R_t2" = -63;
"@MMK_R_u" = -40;
"@MMK_R_v2" = -63;
f = -15;
};
"@MMK_L_L" = {
"@MMK_R_A2" = 15;
"@MMK_R_C2" = -20;
"@MMK_R_J2" = 40;
"@MMK_R_S2" = 40;
"@MMK_R_T2" = -87;
"@MMK_R_U" = -20;
"@MMK_R_V2" = -78;
"@MMK_R_Wgrave2" = -60;
"@MMK_R_Y2" = -117;
"@MMK_R_hyphen2" = -50;
"@MMK_R_quoteright2" = -103;
"@MMK_R_t2" = -35;
"@MMK_R_u" = 15;
"@MMK_R_v2" = -55;
X = 20;
x = 30;
};
"@MMK_L_O" = {
"@MMK_R_A2" = -35;
"@MMK_R_AE" = -78;
"@MMK_R_C2" = -10;
"@MMK_R_S2" = 10;
"@MMK_R_U" = -5;
"@MMK_R_V2" = -45;
"@MMK_R_Wgrave2" = -50;
"@MMK_R_Y2" = -67;
"@MMK_R_Z2" = -35;
"@MMK_R_a2" = -30;
"@MMK_R_b2" = -20;
"@MMK_R_c" = -20;
"@MMK_R_comma2" = -35;
"@MMK_R_emdash2" = 5;
"@MMK_R_s2" = -15;
"@MMK_R_seven2" = -15;
"@MMK_R_t2" = -10;
X = -30;
x = -53;
};
"@MMK_L_Ohorn" = {
"@MMK_R_A2" = -97;
"@MMK_R_C2" = -67;
"@MMK_R_J2" = -50;
"@MMK_R_a2" = -87;
"@MMK_R_b2" = -87;
"@MMK_R_bar" = -20;
"@MMK_R_c" = -87;
"@MMK_R_comma2" = -98;
"@MMK_R_g2" = -107;
"@MMK_R_s2" = -103;
"@MMK_R_t2" = -60;
"@MMK_R_u" = -87;
"@MMK_R_v2" = -87;
"@MMK_R_z2" = -78;
x = -117;
};
"@MMK_L_Oslash" = {
"@MMK_R_A2" = -45;
"@MMK_R_J2" = -25;
};
"@MMK_L_P" = {
"@MMK_R_A2" = -78;
"@MMK_R_AE" = -181;
"@MMK_R_J2" = -67;
"@MMK_R_S2" = -5;
"@MMK_R_Wgrave2" = -10;
"@MMK_R_Y2" = -30;
"@MMK_R_Z2" = -25;
"@MMK_R_a2" = -18;
"@MMK_R_bar" = 20;
"@MMK_R_c" = -25;
"@MMK_R_comma2" = -137;
"@MMK_R_emdash2" = -5;
"@MMK_R_g2" = -15;
"@MMK_R_hyphen2" = -10;
"@MMK_R_question" = -10;
"@MMK_R_s2" = -20;
"@MMK_R_t2" = 10;
"@MMK_R_v2" = 20;
X = -63;
quotesinglbase = -107;
x = -5;
};
"@MMK_L_R" = {
"@MMK_R_A2" = 10;
"@MMK_R_AE" = -25;
"@MMK_R_C2" = -20;
"@MMK_R_J2" = 10;
"@MMK_R_S2" = -10;
"@MMK_R_T2" = -10;
"@MMK_R_U" = -25;
"@MMK_R_V2" = -35;
"@MMK_R_Wgrave2" = -30;
"@MMK_R_Y2" = -50;
"@MMK_R_a2" = -10;
"@MMK_R_c" = -20;
"@MMK_R_g2" = -5;
"@MMK_R_hyphen2" = -40;
"@MMK_R_u" = -5;
"@MMK_R_z2" = -5;
quotesinglbase = -10;
x = -5;
};
"@MMK_L_S" = {
"@MMK_R_A2" = -10;
"@MMK_R_AE" = -58;
"@MMK_R_J2" = 20;
"@MMK_R_S2" = 10;
"@MMK_R_T2" = 10;
"@MMK_R_V2" = -20;
"@MMK_R_Wgrave2" = -5;
"@MMK_R_Y2" = -35;
"@MMK_R_Z2" = -15;
"@MMK_R_a2" = -10;
"@MMK_R_bar" = 30;
"@MMK_R_c" = -10;
"@MMK_R_g2" = -15;
"@MMK_R_hyphen2" = 10;
"@MMK_R_t2" = -10;
"@MMK_R_z2" = -5;
X = -25;
quotesinglbase = -10;
x = -40;
};
"@MMK_L_T" = {
"@MMK_R_A2" = -85;
"@MMK_R_AE" = -127;
"@MMK_R_J2" = -42;
"@MMK_R_S2" = -5;
"@MMK_R_T2" = 40;
"@MMK_R_V2" = 30;
"@MMK_R_Wgrave2" = 30;
"@MMK_R_Y2" = 35;
"@MMK_R_Z2" = 10;
"@MMK_R_a2" = -63;
"@MMK_R_bar" = 25;
"@MMK_R_c" = -83;
"@MMK_R_comma2" = -127;
"@MMK_R_four2" = -50;
"@MMK_R_g2" = -87;
"@MMK_R_question" = 40;
"@MMK_R_s2" = -87;
"@MMK_R_t2" = -20;
"@MMK_R_u" = -67;
"@MMK_R_v2" = -67;
"@MMK_R_z2" = -50;
Schwa = -60;
X = 15;
quotesinglbase = -107;
x = -67;
};
"@MMK_L_Uhorn" = {
"@MMK_R_A2" = -132;
"@MMK_R_J2" = -98;
"@MMK_R_a2" = -90;
"@MMK_R_b2" = -75;
"@MMK_R_c" = -125;
"@MMK_R_comma2" = -155;
"@MMK_R_g2" = -100;
"@MMK_R_s2" = -110;
"@MMK_R_t2" = -50;
"@MMK_R_u" = -75;
"@MMK_R_z2" = -90;
x = -75;
};
"@MMK_L_V" = {
"@MMK_R_A2" = -107;
"@MMK_R_AE" = -170;
"@MMK_R_C2" = -45;
"@MMK_R_J2" = -50;
"@MMK_R_S2" = -30;
"@MMK_R_T2" = 30;
"@MMK_R_V2" = 30;
"@MMK_R_Wgrave2" = 40;
"@MMK_R_Y2" = 30;
"@MMK_R_a2" = -60;
"@MMK_R_b2" = -20;
"@MMK_R_c" = -65;
"@MMK_R_comma2" = -80;
"@MMK_R_g2" = -67;
"@MMK_R_hyphen2" = -50;
"@MMK_R_question" = 40;
"@MMK_R_s2" = -60;
"@MMK_R_t2" = -10;
"@MMK_R_z2" = -20;
X = 30;
quotesinglbase = -78;
x = -50;
};
"@MMK_L_Wgrave" = {
"@MMK_R_A2" = -73;
"@MMK_R_AE" = -155;
"@MMK_R_C2" = -15;
"@MMK_R_J2" = -50;
"@MMK_R_S2" = -30;
"@MMK_R_T2" = 20;
"@MMK_R_V2" = 40;
"@MMK_R_Wgrave2" = 20;
"@MMK_R_Y2" = 40;
"@MMK_R_Z2" = -10;
"@MMK_R_a2" = -60;
"@MMK_R_b2" = -10;
"@MMK_R_bar" = 20;
"@MMK_R_c" = -67;
"@MMK_R_comma2" = -67;
"@MMK_R_g2" = -67;
"@MMK_R_hyphen2" = -40;
"@MMK_R_question" = 30;
"@MMK_R_s2" = -60;
"@MMK_R_t2" = -20;
"@MMK_R_u" = -35;
"@MMK_R_v2" = -30;
X = 10;
quotesinglbase = -60;
x = -30;
};
"@MMK_L_Y" = {
"@MMK_R_A2" = -98;
"@MMK_R_AE" = -190;
"@MMK_R_C2" = -60;
"@MMK_R_J2" = -67;
"@MMK_R_S2" = -50;
"@MMK_R_T2" = 35;
"@MMK_R_U" = 10;
"@MMK_R_V2" = 40;
"@MMK_R_Wgrave2" = 40;
"@MMK_R_Y2" = 30;
"@MMK_R_a2" = -92;
"@MMK_R_b2" = 5;
"@MMK_R_bar" = 40;
"@MMK_R_c" = -125;
"@MMK_R_comma2" = -127;
"@MMK_R_g2" = -112;
"@MMK_R_hyphen2" = -78;
"@MMK_R_question" = 30;
"@MMK_R_quoteright2" = 20;
"@MMK_R_s2" = -98;
"@MMK_R_t2" = -63;
"@MMK_R_u" = -78;
"@MMK_R_v2" = -63;
"@MMK_R_z2" = -60;
Schwa = -67;
X = 25;
f = -20;
quotesinglbase = -117;
x = -60;
};
"@MMK_L_Z" = {
"@MMK_R_A2" = 10;
"@MMK_R_AE" = -20;
"@MMK_R_S2" = 15;
"@MMK_R_T2" = 20;
"@MMK_R_U" = -5;
"@MMK_R_V2" = 20;
"@MMK_R_Z2" = 15;
"@MMK_R_a2" = 15;
"@MMK_R_c" = -5;
"@MMK_R_emdash2" = 10;
"@MMK_R_u" = -10;
"@MMK_R_v2" = -20;
"@MMK_R_z2" = 20;
X = 20;
};
"@MMK_L_a" = {
"@MMK_R_T2" = -67;
"@MMK_R_V2" = -60;
"@MMK_R_Y2" = -87;
"@MMK_R_a2" = -5;
"@MMK_R_bar" = -5;
"@MMK_R_emdash2" = 30;
"@MMK_R_quotedbl2" = -50;
"@MMK_R_quoteright2" = -30;
"@MMK_R_s2" = -5;
"@MMK_R_t2" = -15;
"@MMK_R_v2" = -20;
"@MMK_R_z2" = -5;
x = -5;
};
"@MMK_L_b" = {
"@MMK_R_B" = -20;
"@MMK_R_J2" = 15;
"@MMK_R_T2" = -83;
"@MMK_R_V2" = -60;
"@MMK_R_Wgrave2" = -63;
"@MMK_R_Y2" = -125;
"@MMK_R_bar" = -10;
"@MMK_R_emdash2" = 50;
"@MMK_R_g2" = -10;
"@MMK_R_hyphen2" = 10;
"@MMK_R_question" = -10;
"@MMK_R_quotedbl2" = -53;
"@MMK_R_quoteright2" = -30;
"@MMK_R_t2" = -10;
"@MMK_R_u" = -5;
"@MMK_R_v2" = -20;
"@MMK_R_z2" = -15;
f = -10;
x = -45;
};
"@MMK_L_comma" = {
"@MMK_R_A2" = 20;
"@MMK_R_C2" = -30;
"@MMK_R_S2" = 10;
"@MMK_R_T2" = -95;
"@MMK_R_V2" = -38;
"@MMK_R_Y2" = -155;
"@MMK_R_comma2" = 20;
"@MMK_R_g2" = 20;
"@MMK_R_quoteright2" = -117;
"@MMK_R_seven2" = -110;
"@MMK_R_two2" = 20;
};
"@MMK_L_d" = {
"@MMK_R_g2" = -5;
"@MMK_R_quotedbl2" = -5;
};
"@MMK_L_emdash" = {
"@MMK_R_A2" = -35;
"@MMK_R_B" = -30;
"@MMK_R_C2" = -30;
"@MMK_R_J2" = 25;
"@MMK_R_V2" = -50;
"@MMK_R_c" = 30;
"@MMK_R_s2" = 30;
"@MMK_R_t2" = 15;
"@MMK_R_v2" = 5;
"@MMK_R_z2" = 25;
X = -50;
x = -10;
};
"@MMK_L_five" = {
"@MMK_R_onethird" = 58;
};
"@MMK_L_four" = {
"@MMK_R_T2" = -5;
"@MMK_R_five2" = -15;
"@MMK_R_onethird" = 60;
};
"@MMK_L_g" = {
"@MMK_R_a2" = -15;
"@MMK_R_bar" = 20;
"@MMK_R_c" = -10;
"@MMK_R_emdash2" = 5;
"@MMK_R_hyphen2" = -30;
"@MMK_R_j" = 50;
"@MMK_R_quotedbl2" = 10;
"@MMK_R_quoteright2" = 20;
"@MMK_R_s2" = -5;
"@MMK_R_t2" = 30;
"@MMK_R_u" = -5;
"@MMK_R_v2" = 20;
"@MMK_R_z2" = 10;
f = 20;
quotesinglbase = -20;
x = 10;
};
"@MMK_L_hyphen" = {
"@MMK_R_A2" = -25;
"@MMK_R_S2" = -15;
"@MMK_R_T2" = -117;
"@MMK_R_V2" = -63;
"@MMK_R_Wgrave2" = -40;
"@MMK_R_Y2" = -75;
"@MMK_R_Z2" = -30;
"@MMK_R_c" = 20;
"@MMK_R_g2" = -10;
"@MMK_R_one2" = -63;
"@MMK_R_s2" = 10;
"@MMK_R_seven2" = -112;
"@MMK_R_t2" = -15;
"@MMK_R_v2" = -30;
"@MMK_R_z2" = 10;
X = -78;
x = -40;
};
"@MMK_L_k" = {
"@MMK_R_V2" = -30;
"@MMK_R_a2" = -20;
"@MMK_R_c" = -30;
"@MMK_R_g2" = -20;
"@MMK_R_hyphen2" = -50;
"@MMK_R_quotedbl2" = -30;
"@MMK_R_s2" = -25;
"@MMK_R_t2" = 15;
"@MMK_R_u" = -5;
"@MMK_R_v2" = 20;
f = 15;
};
"@MMK_L_l" = {
"@MMK_R_J2" = 10;
"@MMK_R_T2" = -35;
"@MMK_R_V2" = -25;
"@MMK_R_Y2" = -35;
"@MMK_R_a2" = -5;
"@MMK_R_b2" = -5;
"@MMK_R_bar" = 15;
"@MMK_R_c" = -35;
"@MMK_R_comma2" = 15;
"@MMK_R_emdash2" = 53;
"@MMK_R_g2" = 5;
"@MMK_R_hyphen2" = -15;
"@MMK_R_quotedbl2" = -20;
"@MMK_R_s2" = -5;
"@MMK_R_t2" = -35;
"@MMK_R_v2" = -30;
"@MMK_R_z2" = 10;
f = -20;
};
"@MMK_L_ohorn" = {
"@MMK_R_J2" = -78;
"@MMK_R_a2" = -35;
"@MMK_R_c" = -40;
"@MMK_R_comma2" = -107;
"@MMK_R_g2" = -45;
"@MMK_R_s2" = -35;
"@MMK_R_t2" = 20;
"@MMK_R_v2" = 30;
"@MMK_R_z2" = -40;
x = 20;
};
"@MMK_L_one" = {
"@MMK_R_onethird" = 60;
};
"@MMK_L_quotedbl" = {
"@MMK_R_a2" = -30;
"@MMK_R_b2" = -20;
"@MMK_R_c" = -50;
"@MMK_R_g2" = -30;
"@MMK_R_s2" = -50;
"@MMK_R_u" = -10;
"@MMK_R_v2" = 10;
x = -10;
};
"@MMK_L_quoteleft" = {
"@MMK_R_A2" = -112;
"@MMK_R_J2" = -60;
"@MMK_R_T2" = 25;
"@MMK_R_V2" = 20;
"@MMK_R_Wgrave2" = 20;
"@MMK_R_a2" = -35;
"@MMK_R_c" = -45;
"@MMK_R_g2" = -40;
"@MMK_R_s2" = -40;
"@MMK_R_t2" = 30;
"@MMK_R_v2" = 30;
};
"@MMK_L_quoteright" = {
"@MMK_R_A2" = -127;
"@MMK_R_a2" = -103;
"@MMK_R_b2" = -25;
"@MMK_R_c" = -78;
"@MMK_R_comma2" = -132;
"@MMK_R_s2" = -67;
"@MMK_R_v2" = 10;
};
"@MMK_L_r" = {
"@MMK_R_a2" = -5;
"@MMK_R_bar" = -5;
"@MMK_R_c" = 5;
"@MMK_R_comma2" = -35;
"@MMK_R_emdash2" = 35;
"@MMK_R_hyphen2" = -5;
"@MMK_R_question" = -20;
"@MMK_R_quotedbl2" = 10;
"@MMK_R_quoteright2" = 30;
"@MMK_R_t2" = 5;
"@MMK_R_v2" = 10;
Schwa = 5;
f = 25;
quotesinglbase = -60;
x = 10;
};
"@MMK_L_s" = {
"@MMK_R_a2" = 5;
"@MMK_R_bar" = -10;
"@MMK_R_emdash2" = 53;
"@MMK_R_g2" = -5;
"@MMK_R_hyphen2" = 60;
"@MMK_R_question" = -20;
"@MMK_R_s2" = -5;
"@MMK_R_t2" = 5;
"@MMK_R_v2" = -5;
"@MMK_R_z2" = -10;
X = -30;
quotesinglbase = -10;
x = -20;
};
"@MMK_L_seven" = {
"@MMK_R_comma2" = -107;
"@MMK_R_onethird" = 98;
"@MMK_R_question" = 58;
};
"@MMK_L_six" = {
"@MMK_R_four2" = -5;
"@MMK_R_onethird" = 60;
"@MMK_R_seven2" = -15;
};
"@MMK_L_t" = {
"@MMK_R_V2" = -30;
"@MMK_R_c" = -20;
"@MMK_R_emdash2" = 53;
"@MMK_R_g2" = 5;
"@MMK_R_hyphen2" = -15;
"@MMK_R_j" = 20;
"@MMK_R_question" = 10;
"@MMK_R_quotedbl2" = -5;
"@MMK_R_s2" = -5;
"@MMK_R_t2" = -20;
"@MMK_R_u" = -5;
"@MMK_R_z2" = -5;
f = -20;
x = 5;
};
"@MMK_L_two" = {
"@MMK_R_onethird" = 60;
"@MMK_R_two.numr" = 35;
four.numr = 50;
};
"@MMK_L_uhorn" = {
"@MMK_R_b2" = -20;
"@MMK_R_c" = -63;
"@MMK_R_comma2" = -137;
"@MMK_R_g2" = -40;
"@MMK_R_s2" = -50;
"@MMK_R_t2" = 15;
"@MMK_R_v2" = 15;
};
"@MMK_L_v" = {
"@MMK_R_A2" = -73;
"@MMK_R_V2" = -25;
"@MMK_R_Y2" = -67;
"@MMK_R_a2" = -25;
"@MMK_R_c" = -20;
"@MMK_R_comma2" = -50;
"@MMK_R_emdash2" = 5;
"@MMK_R_g2" = -20;
"@MMK_R_hyphen2" = -5;
"@MMK_R_question" = -50;
"@MMK_R_quotedbl2" = -10;
"@MMK_R_s2" = -20;
"@MMK_R_t2" = 35;
"@MMK_R_v2" = 30;
f = 25;
quotesinglbase = -60;
};
"@MMK_L_z" = {
"@MMK_R_T2" = -40;
"@MMK_R_Y2" = -50;
"@MMK_R_a2" = 15;
"@MMK_R_c" = -10;
"@MMK_R_emdash2" = 45;
"@MMK_R_hyphen2" = -45;
"@MMK_R_quotedbl2" = -10;
"@MMK_R_s2" = 15;
"@MMK_R_t2" = 20;
"@MMK_R_u" = -5;
"@MMK_R_v2" = 15;
"@MMK_R_z2" = 20;
};
B = {
"@MMK_R_A2" = -15;
"@MMK_R_AE" = -58;
"@MMK_R_B" = 20;
"@MMK_R_S2" = 10;
"@MMK_R_T2" = -10;
"@MMK_R_V2" = -25;
"@MMK_R_Wgrave2" = -25;
"@MMK_R_Y2" = -40;
"@MMK_R_Z2" = -20;
"@MMK_R_c" = 10;
"@MMK_R_emdash2" = 25;
"@MMK_R_g2" = -10;
X = -30;
ampersand = -10;
quotesinglbase = -10;
};
Q = {
comma = -10;
ellipsis = -10;
period = -10;
periodcentered = -10;
underscore = -10;
};
T = {
ampersand = -20;
};
Tbar = {
ampersand = -20;
};
Tcaron = {
ampersand = -20;
};
Tcedilla = {
ampersand = -20;
};
Tcommaaccent = {
ampersand = -20;
};
Tdotbelow = {
ampersand = -20;
};
V = {
ae = -60;
ampersand = -65;
};
W = {
ae = -60;
ampersand = -65;
};
X = {
"@MMK_R_A2" = 20;
"@MMK_R_C2" = -53;
"@MMK_R_J2" = 30;
"@MMK_R_Oslash2" = 20;
"@MMK_R_S2" = -15;
"@MMK_R_T2" = 10;
"@MMK_R_U" = -15;
"@MMK_R_V2" = -5;
"@MMK_R_Wgrave2" = 10;
"@MMK_R_Y2" = -15;
"@MMK_R_Z2" = 20;
"@MMK_R_a2" = -10;
"@MMK_R_b2" = -5;
"@MMK_R_bar" = 30;
"@MMK_R_c" = -35;
"@MMK_R_hyphen2" = -58;
"@MMK_R_s2" = -30;
"@MMK_R_t2" = -53;
"@MMK_R_u" = -40;
"@MMK_R_v2" = -73;
X = 30;
x = 20;
};
Y = {
space = -35;
};
Yacute = {
space = -35;
};
Ycircumflex = {
space = -35;
};
Ydieresis = {
space = -35;
};
Ydotbelow = {
space = -35;
};
Ygrave = {
space = -35;
};
Yhoi = {
space = -35;
};
Ytilde = {
space = -35;
};
ae = {
v = -20;
};
ampersand = {
T = -65;
Tbar = -65;
Tcaron = -65;
Tcedilla = -65;
Tcommaaccent = -65;
Tdotbelow = -65;
V = -75;
W = -75;
};
at = {
v = -20;
};
b = {
v = -20;
};
c = {
v = -20;
};
cacute = {
v = -20;
};
ccaron = {
v = -20;
};
ccedilla = {
v = -20;
};
ccircumflex = {
v = -20;
};
cdotaccent = {
v = -20;
};
dcroat = {
at = -50;
c = -50;
cacute = -50;
ccaron = -50;
ccedilla = -50;
ccircumflex = -50;
cdotaccent = -50;
d = -50;
dcaron = -50;
dcroat = -50;
ddotbelow = -50;
e = -50;
eacute = -50;
ebreve = -50;
ecaron = -50;
ecircumflex = -50;
ecircumflexacute = -50;
ecircumflexdotbelow = -50;
ecircumflexgrave = -50;
ecircumflexhoi = -50;
ecircumflextilde = -50;
edblgrave = -50;
edieresis = -50;
edotaccent = -50;
edotbelow = -50;
egrave = -50;
ehoi = -50;
einvertedbreve = -50;
emacron = -50;
eogonek = -50;
eth = -50;
etilde = -50;
g.ss01 = -50;
o = -50;
oacute = -50;
obreve = -50;
ocircumflex = -50;
ocircumflexacute = -50;
ocircumflexdotbelow = -50;
ocircumflexgrave = -50;
ocircumflexhoi = -50;
ocircumflextilde = -50;
odblgrave = -50;
odieresis = -50;
odotbelow = -50;
oe = -50;
ograve = -50;
ohoi = -50;
ohorn = -50;
ohornacute = -50;
ohorndotbelow = -50;
ohorngrave = -50;
ohornhoi = -50;
ohorntilde = -50;
ohungarumlaut = -50;
oinvertedbreve = -50;
omacron = -50;
oogonek = -50;
oslash = -50;
oslashacute = -50;
otilde = -50;
q = -50;
schwa = -50;
};
e = {
v = -20;
};
eacute = {
v = -20;
};
ebreve = {
v = -20;
};
ecaron = {
v = -20;
};
ecircumflex = {
v = -20;
};
ecircumflexacute = {
v = -20;
};
ecircumflexdotbelow = {
v = -20;
};
ecircumflexgrave = {
v = -20;
};
ecircumflexhoi = {
v = -20;
};
ecircumflextilde = {
v = -20;
};
edblgrave = {
v = -20;
};
edieresis = {
v = -20;
};
edotaccent = {
v = -20;
};
edotbelow = {
v = -20;
};
egrave = {
v = -20;
};
ehoi = {
v = -20;
};
eight = {
onehalf = 60;
};
eight.numr = {
fraction = -20;
seven.numr = -5;
};
einvertedbreve = {
v = -20;
};
emacron = {
v = -20;
};
eogonek = {
v = -20;
};
eth = {
v = -20;
};
etilde = {
v = -20;
};
f = {
"@MMK_R_V2" = 40;
"@MMK_R_a2" = 20;
"@MMK_R_bar" = -10;
"@MMK_R_g2" = 5;
"@MMK_R_quoteright2" = 20;
"@MMK_R_t2" = 5;
"@MMK_R_v2" = 20;
f = 5;
x = 20;
};
five = {
onehalf = 58;
};
five.numr = {
fraction = -20;
seven.numr = -5;
};
five.osf = {
onehalf = 58;
};
fiveeighths = {
fraction = 25;
};
fl = {
l = -15;
};
four = {
onehalf = 50;
};
four.dnom = {
five.dnom = -5;
};
four.numr = {
"@MMK_R_two.numr" = -5;
fraction = 25;
};
four.osf = {
onehalf = 50;
};
fraction = {
eight.dnom = -20;
four.dnom = -98;
one.dnom = 15;
seven.dnom = 50;
six.dnom = -20;
three.dnom = -20;
two.dnom = -20;
zero.dnom = -20;
};
germandbls = {
space = -10;
};
l = {
l = -15;
};
lacute = {
l = -15;
};
lcaron = {
l = -15;
};
lcommaaccent = {
l = -15;
};
ldot = {
l = -15;
};
lslash = {
a = -5;
aacute = -5;
abreve = -5;
abreveacute = -5;
abrevedotbelow = -5;
abrevegrave = -5;
abrevehoi = -5;
abrevetilde = -5;
acircumflex = -5;
acircumflexacute = -5;
acircumflexdotbelow = -5;
acircumflexgrave = -5;
acircumflexhoi = -5;
acircumflextilde = -5;
adblgrave = -5;
adieresis = -5;
adotbelow = -5;
ae = -5;
aeacute = -5;
agrave = -5;
ahoi = -5;
ainvertedbreve = -5;
amacron = -5;
aogonek = -5;
aring = -5;
aringacute = -5;
atilde = -5;
l = -15;
};
nine = {
onehalf = 60;
};
nine.numr = {
fraction = -20;
seven.numr = -5;
};
nine.osf = {
"@MMK_R_seven2" = -15;
nine.osf = 20;
};
o = {
v = -20;
};
oacute = {
v = -20;
};
obreve = {
v = -20;
};
ocircumflex = {
v = -20;
};
ocircumflexacute = {
v = -20;
};
ocircumflexdotbelow = {
v = -20;
};
ocircumflexgrave = {
v = -20;
};
ocircumflexhoi = {
v = -20;
};
ocircumflextilde = {
v = -20;
};
odblgrave = {
v = -20;
};
odieresis = {
v = -20;
};
odotbelow = {
v = -20;
};
oe = {
v = -20;
};
ograve = {
v = -20;
};
ohoi = {
v = -20;
};
ohorn = {
z = 5;
zacute = 5;
zcaron = 5;
zdotaccent = 5;
zdotbelow = 5;
};
ohungarumlaut = {
v = -20;
};
oinvertedbreve = {
v = -20;
};
omacron = {
v = -20;
};
one = {
onehalf = 60;
};
one.numr = {
fraction = 25;
};
one.osf = {
onehalf = 60;
};
oneeighth = {
fraction = 25;
};
onequarter = {
fraction = 25;
};
onethird = {
fraction = 25;
};
oogonek = {
v = -20;
};
oslash = {
v = -20;
w = -5;
wacute = -5;
wcircumflex = -5;
wdieresis = -5;
wgrave = -5;
y = -5;
yacute = -5;
ycircumflex = -5;
ydieresis = -5;
ydotbelow = -5;
ygrave = -5;
yhoi = -5;
ytilde = -5;
};
oslashacute = {
v = -20;
};
otilde = {
v = -20;
};
p = {
v = -20;
};
quotesinglbase = {
"@MMK_R_T2" = -107;
"@MMK_R_U" = -20;
"@MMK_R_V2" = -78;
"@MMK_R_Wgrave2" = -60;
"@MMK_R_Y2" = -117;
"@MMK_R_g2" = 10;
"@MMK_R_question" = -60;
"@MMK_R_v2" = -60;
"@MMK_R_z2" = 10;
};
s = {
space = -10;
};
sacute = {
space = -10;
};
scaron = {
space = -10;
};
scedilla = {
space = -10;
};
schwa = {
v = -20;
};
scircumflex = {
space = -10;
};
scommaaccent = {
space = -10;
};
sdotbelow = {
space = -10;
};
seven = {
onehalf = 83;
};
seven.dnom = {
eight.dnom = -15;
six.dnom = -15;
three.dnom = -15;
two.dnom = -15;
zero.dnom = -15;
};
seven.numr = {
eight.numr = -10;
five.numr = -10;
fraction = -45;
nine.numr = -10;
six.numr = -10;
three.numr = -10;
two.numr = -10;
zero.numr = -10;
};
seven.osf = {
onehalf = 83;
};
seveneighths = {
fraction = 25;
};
six = {
onehalf = 60;
};
six.numr = {
fraction = -20;
seven.numr = -5;
};
space = {
V = -10;
W = -10;
};
t = {
fi = -20;
fl = -20;
t = -20;
tbar = -20;
tcaron = -20;
tcedilla = -20;
tcommaaccent = -20;
tdotbelow = -20;
};
thorn = {
v = -20;
};
three = {
onehalf = 60;
};
three.numr = {
fraction = -20;
seven.numr = -5;
};
threeeighths = {
fraction = 25;
};
threequarters = {
fraction = 25;
};
two = {
onehalf = 60;
};
two.numr = {
fraction = 50;
};
two.osf = {
onehalf = 60;
};
twothirds = {
fraction = 25;
};
v = {
space = -10;
};
w = {
space = -10;
};
wacute = {
space = -10;
};
wcircumflex = {
space = -10;
};
wdieresis = {
space = -10;
};
wgrave = {
space = -10;
};
x = {
"@MMK_R_S2" = -10;
"@MMK_R_V2" = -20;
"@MMK_R_a2" = -20;
"@MMK_R_c" = -35;
"@MMK_R_hyphen2" = -40;
"@MMK_R_s2" = -20;
"@MMK_R_u" = -15;
"@MMK_R_v2" = 10;
f = 10;
quotesinglbase = -10;
x = 15;
};
y = {
space = -10;
};
yacute = {
space = -10;
};
ycircumflex = {
space = -10;
};
ydieresis = {
space = -10;
};
ydotbelow = {
space = -10;
};
ygrave = {
space = -10;
};
yhoi = {
space = -10;
};
ytilde = {
space = -10;
};
zero = {
onehalf = 60;
};
zero.numr = {
fraction = -20;
seven.numr = -5;
};
zero.osf = {
onehalf = 60;
};
};
"84E72C1A-4249-4129-A9E3-B383380F4618" = {
"@MMK_L_A" = {
"@MMK_R_A2" = 8;
"@MMK_R_C2" = -35;
"@MMK_R_J2" = 8;
"@MMK_R_Oslash2" = 5;
"@MMK_R_S2" = -15;
"@MMK_R_T2" = -88;
"@MMK_R_U" = -35;
"@MMK_R_V2" = -115;
"@MMK_R_Wgrave2" = -40;
"@MMK_R_Y2" = -74;
"@MMK_R_Z2" = 7;
"@MMK_R_c" = -13;
"@MMK_R_g2" = -17;
"@MMK_R_hyphen2" = -30;
"@MMK_R_quoteright2" = -104;
"@MMK_R_s2" = -15;
"@MMK_R_seven2" = -54;
"@MMK_R_six2" = -7;
"@MMK_R_t2" = -55;
"@MMK_R_u" = -8;
"@MMK_R_v2" = -59;
"@MMK_R_z2" = 3;
X = 23;
f = -52;
x = -6;
};
"@MMK_L_C" = {
"@MMK_R_A2" = -13;
"@MMK_R_AE" = -24;
"@MMK_R_J2" = -7;
"@MMK_R_T2" = -19;
"@MMK_R_V2" = -9;
"@MMK_R_Wgrave2" = -10;
"@MMK_R_Y2" = -20;
"@MMK_R_Z2" = -6;
"@MMK_R_a2" = -6;
"@MMK_R_c" = -2;
"@MMK_R_comma2" = -7;
"@MMK_R_emdash2" = 9;
"@MMK_R_g2" = -17;
"@MMK_R_z2" = -2;
X = -23;
quotesinglbase = -14;
};
"@MMK_L_D" = {
"@MMK_R_A2" = -28;
"@MMK_R_J2" = -17;
"@MMK_R_S2" = -7;
"@MMK_R_T2" = -28;
"@MMK_R_V2" = -23;
"@MMK_R_Wgrave2" = -17;
"@MMK_R_Y2" = -43;
"@MMK_R_Z2" = -38;
"@MMK_R_comma2" = -13;
"@MMK_R_question" = -7;
X = -35;
quotesinglbase = -28;
x = -7;
};
"@MMK_L_E" = {
"@MMK_R_A2" = -7;
"@MMK_R_AE" = -89;
"@MMK_R_B" = 7;
"@MMK_R_C2" = -2;
"@MMK_R_J2" = 18;
"@MMK_R_S2" = 3;
"@MMK_R_T2" = 16;
"@MMK_R_V2" = 3;
"@MMK_R_Wgrave2" = 34;
"@MMK_R_Y2" = 20;
"@MMK_R_a2" = -7;
"@MMK_R_b2" = -14;
"@MMK_R_bar" = 9;
"@MMK_R_c" = -7;
"@MMK_R_comma2" = -26;
"@MMK_R_emdash2" = 8;
"@MMK_R_g2" = -13;
"@MMK_R_hyphen2" = -20;
"@MMK_R_question" = 3;
"@MMK_R_s2" = -10;
"@MMK_R_t2" = -29;
"@MMK_R_u" = -7;
"@MMK_R_v2" = -15;
"@MMK_R_z2" = 3;
X = 20;
f = -7;
x = -10;
};
"@MMK_L_F" = {
"@MMK_R_A2" = -65;
"@MMK_R_J2" = -50;
"@MMK_R_S2" = -10;
"@MMK_R_T2" = 26;
"@MMK_R_V2" = 10;
"@MMK_R_Wgrave2" = 9;
"@MMK_R_Y2" = 23;
"@MMK_R_Z2" = -6;
"@MMK_R_a2" = -10;
"@MMK_R_c" = -15;
"@MMK_R_comma2" = -74;
"@MMK_R_g2" = -10;
"@MMK_R_hyphen2" = -7;
"@MMK_R_question" = 9;
"@MMK_R_s2" = -12;
"@MMK_R_u" = -10;
"@MMK_R_v2" = -10;
"@MMK_R_z2" = -3;
quotesinglbase = -45;
x = -20;
};
"@MMK_L_G" = {
"@MMK_R_A2" = 3;
"@MMK_R_J2" = 3;
"@MMK_R_Oslash2" = 17;
"@MMK_R_S2" = -3;
"@MMK_R_T2" = -42;
"@MMK_R_V2" = -37;
"@MMK_R_Wgrave2" = -16;
"@MMK_R_Y2" = -39;
"@MMK_R_z2" = 3;
};
"@MMK_L_H" = {
"@MMK_R_U" = -5;
"@MMK_R_a2" = -3;
"@MMK_R_c" = -6;
"@MMK_R_emdash2" = 9;
"@MMK_R_g2" = -7;
"@MMK_R_t2" = -5;
};
"@MMK_L_J" = {
"@MMK_R_A2" = -35;
"@MMK_R_AE" = -47;
"@MMK_R_Z2" = 7;
"@MMK_R_comma2" = -33;
"@MMK_R_g2" = -24;
"@MMK_R_t2" = 14;
};
"@MMK_L_K" = {
"@MMK_R_A2" = 13;
"@MMK_R_J2" = 13;
"@MMK_R_S2" = -30;
"@MMK_R_T2" = 3;
"@MMK_R_U" = -18;
"@MMK_R_V2" = 9;
"@MMK_R_Y2" = 6;
"@MMK_R_a2" = -8;
"@MMK_R_c" = -28;
"@MMK_R_hyphen2" = -57;
"@MMK_R_s2" = -13;
"@MMK_R_t2" = -56;
"@MMK_R_u" = -30;
"@MMK_R_v2" = -40;
f = -15;
};
"@MMK_L_L" = {
"@MMK_R_A2" = 15;
"@MMK_R_C2" = -20;
"@MMK_R_J2" = 26;
"@MMK_R_S2" = 13;
"@MMK_R_T2" = -95;
"@MMK_R_U" = -23;
"@MMK_R_V2" = -64;
"@MMK_R_Wgrave2" = -36;
"@MMK_R_Y2" = -90;
"@MMK_R_a2" = -17;
"@MMK_R_c" = -21;
"@MMK_R_g2" = 3;
"@MMK_R_hyphen2" = -56;
"@MMK_R_question" = -7;
"@MMK_R_quoteright2" = -95;
"@MMK_R_t2" = -52;
"@MMK_R_u" = 1;
"@MMK_R_v2" = -38;
"@MMK_R_z2" = 14;
X = 6;
f = -41;
quotesinglbase = 7;
x = 9;
};
"@MMK_L_O" = {
"@MMK_R_A2" = -35;
"@MMK_R_AE" = -84;
"@MMK_R_C2" = -3;
"@MMK_R_J2" = -14;
"@MMK_R_S2" = -4;
"@MMK_R_T2" = 10;
"@MMK_R_U" = -15;
"@MMK_R_V2" = -14;
"@MMK_R_Wgrave2" = -33;
"@MMK_R_Y2" = -21;
"@MMK_R_Z2" = -25;
"@MMK_R_a2" = -9;
"@MMK_R_b2" = -6;
"@MMK_R_c" = -6;
"@MMK_R_comma2" = -45;
"@MMK_R_emdash2" = -2;
"@MMK_R_g2" = -7;
"@MMK_R_quoteright2" = -21;
"@MMK_R_s2" = -5;
"@MMK_R_seven2" = -15;
"@MMK_R_t2" = -7;
X = -9;
x = -17;
};
"@MMK_L_Ohorn" = {
"@MMK_R_A2" = -58;
"@MMK_R_C2" = -21;
"@MMK_R_J2" = -23;
"@MMK_R_a2" = -27;
"@MMK_R_b2" = -27;
"@MMK_R_bar" = -6;
"@MMK_R_c" = -27;
"@MMK_R_comma2" = -31;
"@MMK_R_g2" = -33;
"@MMK_R_s2" = -32;
"@MMK_R_t2" = -19;
"@MMK_R_u" = -27;
"@MMK_R_v2" = -27;
"@MMK_R_z2" = -24;
x = -37;
};
"@MMK_L_Oslash" = {
"@MMK_R_A2" = -35;
"@MMK_R_J2" = -35;
};
"@MMK_L_P" = {
"@MMK_R_A2" = -59;
"@MMK_R_AE" = -116;
"@MMK_R_C2" = 3;
"@MMK_R_J2" = -52;
"@MMK_R_S2" = 12;
"@MMK_R_Wgrave2" = -3;
"@MMK_R_Y2" = -9;
"@MMK_R_Z2" = -15;
"@MMK_R_a2" = -9;
"@MMK_R_bar" = 6;
"@MMK_R_c" = -8;
"@MMK_R_comma2" = -110;
"@MMK_R_emdash2" = -22;
"@MMK_R_g2" = -15;
"@MMK_R_hyphen2" = -27;
"@MMK_R_question" = -3;
"@MMK_R_s2" = -17;
"@MMK_R_t2" = 7;
"@MMK_R_u" = -3;
"@MMK_R_v2" = 20;
X = -20;
f = 3;
quotesinglbase = -91;
x = 5;
};
"@MMK_L_R" = {
"@MMK_R_A2" = 3;
"@MMK_R_AE" = -22;
"@MMK_R_C2" = -10;
"@MMK_R_J2" = 3;
"@MMK_R_S2" = -20;
"@MMK_R_T2" = -10;
"@MMK_R_U" = -18;
"@MMK_R_V2" = -28;
"@MMK_R_Wgrave2" = -9;
"@MMK_R_Y2" = -9;
"@MMK_R_a2" = -10;
"@MMK_R_b2" = -7;
"@MMK_R_c" = -17;
"@MMK_R_comma2" = -3;
"@MMK_R_g2" = -15;
"@MMK_R_hyphen2" = -43;
"@MMK_R_u" = -8;
"@MMK_R_z2" = -8;
quotesinglbase = -17;
x = -8;
};
"@MMK_L_S" = {
"@MMK_R_A2" = -17;
"@MMK_R_AE" = -64;
"@MMK_R_B" = -3;
"@MMK_R_C2" = -14;
"@MMK_R_S2" = 7;
"@MMK_R_T2" = -18;
"@MMK_R_V2" = -20;
"@MMK_R_Wgrave2" = -2;
"@MMK_R_Y2" = -28;
"@MMK_R_Z2" = -5;
"@MMK_R_a2" = -3;
"@MMK_R_bar" = 9;
"@MMK_R_comma2" = -21;
"@MMK_R_g2" = -25;
"@MMK_R_hyphen2" = 3;
"@MMK_R_t2" = -20;
"@MMK_R_v2" = 7;
"@MMK_R_z2" = -8;
X = -18;
quotesinglbase = -17;
x = -16;
};
"@MMK_L_T" = {
"@MMK_R_A2" = -88;
"@MMK_R_AE" = -86;
"@MMK_R_C2" = -7;
"@MMK_R_J2" = -44;
"@MMK_R_S2" = 2;
"@MMK_R_T2" = 26;
"@MMK_R_V2" = 37;
"@MMK_R_Wgrave2" = 27;
"@MMK_R_Y2" = 45;
"@MMK_R_Z2" = 10;
"@MMK_R_a2" = -60;
"@MMK_R_b2" = -34;
"@MMK_R_bar" = 8;
"@MMK_R_c" = -69;
"@MMK_R_comma2" = -121;
"@MMK_R_four2" = -69;
"@MMK_R_g2" = -72;
"@MMK_R_hyphen2" = -63;
"@MMK_R_j" = 21;
"@MMK_R_question" = 13;
"@MMK_R_quoteright2" = 21;
"@MMK_R_s2" = -64;
"@MMK_R_t2" = -27;
"@MMK_R_u" = -55;
"@MMK_R_v2" = -42;
"@MMK_R_z2" = -40;
Schwa = -19;
X = 8;
ampersand = -6;
quotesinglbase = -83;
x = -48;
};
"@MMK_L_Uhorn" = {
"@MMK_R_A2" = -126;
"@MMK_R_J2" = -72;
"@MMK_R_V2" = 34;
"@MMK_R_Wgrave2" = 28;
"@MMK_R_a2" = -49;
"@MMK_R_b2" = -54;
"@MMK_R_c" = -53;
"@MMK_R_comma2" = -48;
"@MMK_R_g2" = -66;
"@MMK_R_s2" = -55;
"@MMK_R_t2" = -33;
"@MMK_R_u" = -48;
"@MMK_R_z2" = -45;
x = -39;
};
"@MMK_L_V" = {
"@MMK_R_A2" = -115;
"@MMK_R_AE" = -116;
"@MMK_R_C2" = -14;
"@MMK_R_J2" = -47;
"@MMK_R_S2" = -13;
"@MMK_R_T2" = 37;
"@MMK_R_V2" = 9;
"@MMK_R_Wgrave2" = 40;
"@MMK_R_Y2" = 49;
"@MMK_R_Z2" = 21;
"@MMK_R_a2" = -43;
"@MMK_R_b2" = -6;
"@MMK_R_c" = -44;
"@MMK_R_comma2" = -112;
"@MMK_R_g2" = -31;
"@MMK_R_hyphen2" = -47;
"@MMK_R_j" = 21;
"@MMK_R_question" = 23;
"@MMK_R_s2" = -22;
"@MMK_R_t2" = -3;
"@MMK_R_z2" = -6;
X = -4;
ae = -62;
ampersand = -20;
f = 3;
quotesinglbase = -61;
x = -16;
};
"@MMK_L_Wgrave" = {
"@MMK_R_A2" = -72;
"@MMK_R_AE" = -83;
"@MMK_R_C2" = -5;
"@MMK_R_J2" = -36;
"@MMK_R_S2" = -16;
"@MMK_R_T2" = 34;
"@MMK_R_V2" = 19;
"@MMK_R_Wgrave2" = 20;
"@MMK_R_Y2" = 43;
"@MMK_R_Z2" = -3;
"@MMK_R_a2" = -29;
"@MMK_R_b2" = -17;
"@MMK_R_bar" = 6;
"@MMK_R_c" = -35;
"@MMK_R_comma2" = -75;
"@MMK_R_g2" = -35;
"@MMK_R_hyphen2" = -26;
"@MMK_R_question" = 9;
"@MMK_R_s2" = -26;
"@MMK_R_t2" = 8;
"@MMK_R_u" = -28;
"@MMK_R_v2" = -16;
X = 10;
f = -3;
quotesinglbase = -46;
x = -13;
};
"@MMK_L_Y" = {
"@MMK_R_A2" = -77;
"@MMK_R_AE" = -105;
"@MMK_R_C2" = -26;
"@MMK_R_J2" = -64;
"@MMK_R_S2" = -40;
"@MMK_R_T2" = 35;
"@MMK_R_U" = 3;
"@MMK_R_V2" = 33;
"@MMK_R_Wgrave2" = 26;
"@MMK_R_Y2" = 46;
"@MMK_R_a2" = -63;
"@MMK_R_b2" = -19;
"@MMK_R_bar" = 13;
"@MMK_R_c" = -60;
"@MMK_R_comma2" = -80;
"@MMK_R_g2" = -75;
"@MMK_R_hyphen2" = -78;
"@MMK_R_question" = 16;
"@MMK_R_quoteright2" = 17;
"@MMK_R_s2" = -71;
"@MMK_R_t2" = -44;
"@MMK_R_u" = -45;
"@MMK_R_v2" = -44;
"@MMK_R_z2" = -36;
Schwa = -21;
X = 15;
f = -13;
quotesinglbase = -96;
space = -11;
x = -36;
};
"@MMK_L_Z" = {
"@MMK_R_A2" = 3;
"@MMK_R_AE" = -6;
"@MMK_R_J2" = 14;
"@MMK_R_S2" = -9;
"@MMK_R_T2" = 20;
"@MMK_R_U" = -2;
"@MMK_R_V2" = 10;
"@MMK_R_Y2" = 7;
"@MMK_R_Z2" = 15;
"@MMK_R_a2" = 5;
"@MMK_R_b2" = -17;
"@MMK_R_c" = -15;
"@MMK_R_emdash2" = 3;
"@MMK_R_hyphen2" = -57;
"@MMK_R_u" = -3;
"@MMK_R_v2" = -13;
"@MMK_R_z2" = 6;
X = 6;
quotesinglbase = 7;
};
"@MMK_L_a" = {
"@MMK_R_T2" = -116;
"@MMK_R_V2" = -39;
"@MMK_R_Y2" = -48;
"@MMK_R_a2" = -2;
"@MMK_R_bar" = -2;
"@MMK_R_emdash2" = 9;
"@MMK_R_quotedbl2" = -56;
"@MMK_R_quoteright2" = -27;
"@MMK_R_s2" = -5;
"@MMK_R_seven2" = -34;
"@MMK_R_t2" = -22;
"@MMK_R_v2" = -17;
"@MMK_R_z2" = -2;
f = -17;
x = -12;
};
"@MMK_L_b" = {
"@MMK_R_B" = -6;
"@MMK_R_J2" = -16;
"@MMK_R_T2" = -93;
"@MMK_R_V2" = -43;
"@MMK_R_Wgrave2" = -20;
"@MMK_R_Y2" = -60;
"@MMK_R_a2" = -7;
"@MMK_R_bar" = -3;
"@MMK_R_emdash2" = 16;
"@MMK_R_g2" = -3;
"@MMK_R_hyphen2" = 10;
"@MMK_R_question" = -10;
"@MMK_R_quotedbl2" = -70;
"@MMK_R_quoteright2" = -44;
"@MMK_R_s2" = -3;
"@MMK_R_t2" = -24;
"@MMK_R_u" = -2;
"@MMK_R_v2" = -6;
"@MMK_R_z2" = -12;
f = -20;
space = -7;
v = -10;
x = -35;
};
"@MMK_L_comma" = {
"@MMK_R_A2" = 30;
"@MMK_R_C2" = -9;
"@MMK_R_S2" = 3;
"@MMK_R_T2" = -111;
"@MMK_R_V2" = -19;
"@MMK_R_Wgrave2" = -21;
"@MMK_R_Y2" = -88;
"@MMK_R_comma2" = 52;
"@MMK_R_four2" = -7;
"@MMK_R_g2" = 20;
"@MMK_R_quoteright2" = -80;
"@MMK_R_seven2" = -48;
"@MMK_R_two2" = 20;
space = -7;
};
"@MMK_L_d" = {
"@MMK_R_b2" = 7;
"@MMK_R_g2" = -2;
"@MMK_R_quotedbl2" = -8;
};
"@MMK_L_emdash" = {
"@MMK_R_A2" = -25;
"@MMK_R_B" = -20;
"@MMK_R_C2" = -9;
"@MMK_R_J2" = -13;
"@MMK_R_V2" = -40;
"@MMK_R_c" = 6;
"@MMK_R_s2" = 9;
"@MMK_R_t2" = 5;
"@MMK_R_v2" = 2;
"@MMK_R_z2" = 8;
X = -33;
x = -13;
};
"@MMK_L_five" = {
"@MMK_R_onethird" = 58;
"@MMK_R_two.numr" = 21;
onehalf = 58;
};
"@MMK_L_four" = {
"@MMK_R_T2" = -15;
"@MMK_R_five2" = -8;
"@MMK_R_onethird" = 59;
"@MMK_R_two.numr" = 17;
onehalf = 50;
};
"@MMK_L_g" = {
"@MMK_R_a2" = -15;
"@MMK_R_bar" = 17;
"@MMK_R_c" = -17;
"@MMK_R_emdash2" = 2;
"@MMK_R_g2" = -14;
"@MMK_R_hyphen2" = -40;
"@MMK_R_j" = 29;
"@MMK_R_quotedbl2" = 3;
"@MMK_R_quoteright2" = 6;
"@MMK_R_s2" = -19;
"@MMK_R_t2" = 3;
"@MMK_R_u" = -15;
"@MMK_R_z2" = 3;
f = 10;
quotesinglbase = -10;
x = -4;
};
"@MMK_L_hyphen" = {
"@MMK_R_A2" = -25;
"@MMK_R_J2" = -31;
"@MMK_R_S2" = -22;
"@MMK_R_T2" = -131;
"@MMK_R_V2" = -80;
"@MMK_R_Wgrave2" = -26;
"@MMK_R_Y2" = -77;
"@MMK_R_Z2" = -30;
"@MMK_R_a2" = 3;
"@MMK_R_c" = 6;
"@MMK_R_g2" = -3;
"@MMK_R_one2" = -77;
"@MMK_R_s2" = 3;
"@MMK_R_seven2" = -116;
"@MMK_R_t2" = -15;
"@MMK_R_v2" = -16;
"@MMK_R_z2" = -7;
X = -52;
x = -33;
};
"@MMK_L_k" = {
"@MMK_R_V2" = -9;
"@MMK_R_a2" = -13;
"@MMK_R_c" = -23;
"@MMK_R_g2" = -20;
"@MMK_R_hyphen2" = -29;
"@MMK_R_question" = -7;
"@MMK_R_quotedbl2" = -44;
"@MMK_R_s2" = -11;
"@MMK_R_t2" = -16;
"@MMK_R_u" = -12;
"@MMK_R_v2" = 13;
f = 12;
};
"@MMK_L_l" = {
"@MMK_R_J2" = 3;
"@MMK_R_T2" = -38;
"@MMK_R_V2" = -22;
"@MMK_R_Y2" = -25;
"@MMK_R_a2" = -5;
"@MMK_R_b2" = -5;
"@MMK_R_bar" = 5;
"@MMK_R_c" = -25;
"@MMK_R_comma2" = 5;
"@MMK_R_emdash2" = 17;
"@MMK_R_g2" = 12;
"@MMK_R_hyphen2" = -18;
"@MMK_R_quotedbl2" = -46;
"@MMK_R_quoteright2" = -40;
"@MMK_R_s2" = -15;
"@MMK_R_t2" = -38;
"@MMK_R_u" = -17;
"@MMK_R_v2" = -20;
"@MMK_R_z2" = 7;
f = -23;
l = -15;
};
"@MMK_L_ohorn" = {
"@MMK_R_J2" = -51;
"@MMK_R_a2" = -11;
"@MMK_R_c" = -13;
"@MMK_R_comma2" = -33;
"@MMK_R_g2" = -14;
"@MMK_R_s2" = -11;
"@MMK_R_t2" = 6;
"@MMK_R_v2" = 9;
"@MMK_R_z2" = -13;
x = 6;
};
"@MMK_L_one" = {
"@MMK_R_onethird" = 39;
"@MMK_R_two.numr" = 21;
onehalf = 59;
};
"@MMK_L_quotedbl" = {
"@MMK_R_a2" = -55;
"@MMK_R_b2" = -46;
"@MMK_R_c" = -62;
"@MMK_R_g2" = -55;
"@MMK_R_s2" = -75;
"@MMK_R_t2" = -14;
"@MMK_R_u" = -31;
"@MMK_R_v2" = 3;
"@MMK_R_z2" = -21;
x = -24;
};
"@MMK_L_quoteleft" = {
"@MMK_R_A2" = -92;
"@MMK_R_J2" = -50;
"@MMK_R_S2" = -3;
"@MMK_R_T2" = 22;
"@MMK_R_V2" = 23;
"@MMK_R_Wgrave2" = 13;
"@MMK_R_Y2" = 21;
"@MMK_R_a2" = -21;
"@MMK_R_c" = -51;
"@MMK_R_g2" = -26;
"@MMK_R_s2" = -33;
"@MMK_R_t2" = 23;
"@MMK_R_v2" = 30;
X = 7;
};
"@MMK_L_quoteright" = {
"@MMK_R_A2" = -103;
"@MMK_R_a2" = -72;
"@MMK_R_b2" = -22;
"@MMK_R_c" = -64;
"@MMK_R_comma2" = -101;
"@MMK_R_s2" = -61;
"@MMK_R_v2" = 17;
"@MMK_R_z2" = -21;
space = -24;
};
"@MMK_L_r" = {
"@MMK_R_a2" = -19;
"@MMK_R_bar" = -2;
"@MMK_R_c" = -9;
"@MMK_R_comma2" = -74;
"@MMK_R_emdash2" = 11;
"@MMK_R_g2" = -17;
"@MMK_R_hyphen2" = -51;
"@MMK_R_question" = -17;
"@MMK_R_quotedbl2" = 3;
"@MMK_R_quoteright2" = 13;
"@MMK_R_s2" = -3;
"@MMK_R_t2" = -16;
"@MMK_R_v2" = 13;
"@MMK_R_z2" = 7;
Schwa = 2;
f = 8;
quotesinglbase = -46;
x = 13;
};
"@MMK_L_s" = {
"@MMK_R_a2" = 2;
"@MMK_R_bar" = -3;
"@MMK_R_emdash2" = 17;
"@MMK_R_g2" = -2;
"@MMK_R_hyphen2" = 36;
"@MMK_R_question" = -6;
"@MMK_R_quotedbl2" = -7;
"@MMK_R_s2" = -2;
"@MMK_R_t2" = -12;
"@MMK_R_v2" = -2;
"@MMK_R_z2" = -3;
X = -9;
quotesinglbase = -7;
space = -3;
x = -13;
};
"@MMK_L_seven" = {
"@MMK_R_b2" = -10;
"@MMK_R_comma2" = -121;
"@MMK_R_four2" = -28;
"@MMK_R_one2" = 21;
"@MMK_R_onethird" = 98;
"@MMK_R_question" = 39;
"@MMK_R_seven2" = 14;
"@MMK_R_six2" = -21;
"@MMK_R_two.numr" = 28;
"@MMK_R_two2" = 7;
eight.osf = -21;
nine.osf = 7;
onehalf = 93;
};
"@MMK_L_six" = {
"@MMK_R_four2" = -2;
"@MMK_R_onethird" = 59;
"@MMK_R_seven2" = -18;
"@MMK_R_six2" = -7;
"@MMK_R_two.numr" = 40;
onehalf = 59;
};
"@MMK_L_t" = {
"@MMK_R_V2" = -23;
"@MMK_R_a2" = -3;
"@MMK_R_c" = -13;
"@MMK_R_emdash2" = 17;
"@MMK_R_g2" = 12;
"@MMK_R_hyphen2" = -25;
"@MMK_R_j" = 6;
"@MMK_R_question" = 3;
"@MMK_R_quotedbl2" = -22;
"@MMK_R_s2" = -2;
"@MMK_R_t2" = -41;
"@MMK_R_u" = -5;
"@MMK_R_z2" = -2;
f = -41;
x = 2;
};
"@MMK_L_two" = {
"@MMK_R_onethird" = 59;
"@MMK_R_question" = -7;
"@MMK_R_two.numr" = 54;
four.numr = 16;
onehalf = 59;
seven.numr = 34;
};
"@MMK_L_uhorn" = {
"@MMK_R_b2" = -6;
"@MMK_R_c" = -20;
"@MMK_R_comma2" = -53;
"@MMK_R_g2" = -13;
"@MMK_R_s2" = -16;
"@MMK_R_t2" = 15;
"@MMK_R_v2" = 12;
};
"@MMK_L_v" = {
"@MMK_R_A2" = -47;
"@MMK_R_V2" = -22;
"@MMK_R_Y2" = -21;
"@MMK_R_a2" = -11;
"@MMK_R_c" = -10;
"@MMK_R_comma2" = -50;
"@MMK_R_emdash2" = 2;
"@MMK_R_g2" = -17;
"@MMK_R_hyphen2" = -5;
"@MMK_R_question" = -29;
"@MMK_R_quotedbl2" = 11;
"@MMK_R_s2" = -10;
"@MMK_R_v2" = 9;
f = 8;
quotesinglbase = -53;
space = -3;
x = 7;
};
"@MMK_L_z" = {
"@MMK_R_T2" = -13;
"@MMK_R_Y2" = -16;
"@MMK_R_a2" = 5;
"@MMK_R_c" = -3;
"@MMK_R_emdash2" = 14;
"@MMK_R_g2" = -7;
"@MMK_R_hyphen2" = -31;
"@MMK_R_quotedbl2" = -24;
"@MMK_R_s2" = 1;
"@MMK_R_t2" = 3;
"@MMK_R_u" = -2;
"@MMK_R_v2" = -9;
"@MMK_R_z2" = 10;
f = -3;
x = -10;
};
B = {
"@MMK_R_A2" = -5;
"@MMK_R_AE" = -4;
"@MMK_R_B" = 6;
"@MMK_R_C2" = -3;
"@MMK_R_S2" = 3;
"@MMK_R_T2" = -24;
"@MMK_R_V2" = -22;
"@MMK_R_Wgrave2" = -18;
"@MMK_R_Y2" = -40;
"@MMK_R_Z2" = -13;
"@MMK_R_c" = 3;
"@MMK_R_emdash2" = 8;
"@MMK_R_g2" = -10;
"@MMK_R_hyphen2" = -10;
"@MMK_R_question" = -7;
"@MMK_R_quoteright2" = -21;
"@MMK_R_v2" = -3;
"@MMK_R_z2" = -7;
X = -23;
ampersand = -3;
quotesinglbase = -13;
};
Q = {
"@MMK_R_comma2" = -38;
};
X = {
"@MMK_R_C2" = -17;
"@MMK_R_J2" = 23;
"@MMK_R_Oslash2" = 20;
"@MMK_R_S2" = -15;
"@MMK_R_T2" = 3;
"@MMK_R_U" = -12;
"@MMK_R_V2" = -2;
"@MMK_R_Wgrave2" = 13;
"@MMK_R_Y2" = -18;
"@MMK_R_Z2" = 6;
"@MMK_R_a2" = -3;
"@MMK_R_b2" = -2;
"@MMK_R_bar" = 9;
"@MMK_R_c" = -25;
"@MMK_R_emdash2" = -21;
"@MMK_R_hyphen2" = -46;
"@MMK_R_s2" = -23;
"@MMK_R_t2" = -10;
"@MMK_R_u" = -19;
"@MMK_R_v2" = -37;
X = 53;
quotesinglbase = 10;
x = 6;
};
ampersand = {
"@MMK_R_T2" = -55;
"@MMK_R_V2" = -44;
"@MMK_R_Wgrave2" = -24;
};
c = {
"@MMK_R_b2" = -7;
"@MMK_R_c" = -3;
};
dcroat = {
"@MMK_R_c" = -33;
};
eight.numr = {
fraction = -13;
seven.numr = -2;
};
eight.osf = {
"@MMK_R_four2" = -7;
"@MMK_R_seven2" = -17;
};
exclam = {
"@MMK_R_question" = 21;
};
f = {
"@MMK_R_V2" = 33;
"@MMK_R_a2" = 3;
"@MMK_R_bar" = -3;
"@MMK_R_c" = -7;
"@MMK_R_comma2" = -21;
"@MMK_R_g2" = -16;
"@MMK_R_hyphen2" = -10;
"@MMK_R_question" = 28;
"@MMK_R_quoteright2" = 20;
"@MMK_R_s2" = -7;
"@MMK_R_t2" = -33;
"@MMK_R_v2" = 6;
"@MMK_R_z2" = -3;
f = -26;
quotesinglbase = -17;
x = 6;
};
five.numr = {
fraction = -13;
seven.numr = -2;
};
fiveeighths = {
fraction = 22;
};
four.dnom = {
five.dnom = -2;
};
four.numr = {
"@MMK_R_two.numr" = -2;
fraction = 8;
};
fraction = {
eight.dnom = -17;
four.dnom = -94;
one.dnom = 29;
seven.dnom = 56;
six.dnom = -17;
three.dnom = -17;
two.dnom = 8;
zero.dnom = -17;
};
lslash = {
"@MMK_R_a2" = -15;
};
nine.numr = {
fraction = -13;
seven.numr = -2;
};
nine.osf = {
"@MMK_R_seven2" = -32;
nine.osf = 27;
};
ohorn = {
"@MMK_R_z2" = 2;
};
one.numr = {
fraction = 22;
};
oneeighth = {
fraction = 22;
};
onequarter = {
fraction = 22;
};
onethird = {
fraction = 22;
};
oslash = {
w = 19;
wacute = 19;
wcircumflex = 19;
wdieresis = 19;
wgrave = 19;
y = 19;
yacute = 19;
ycircumflex = 19;
ydieresis = 19;
ydotbelow = 19;
ygrave = 19;
yhoi = 19;
ytilde = 19;
};
quotesinglbase = {
"@MMK_R_A2" = 7;
"@MMK_R_J2" = 7;
"@MMK_R_S2" = -7;
"@MMK_R_T2" = -83;
"@MMK_R_U" = -20;
"@MMK_R_V2" = -61;
"@MMK_R_Wgrave2" = -46;
"@MMK_R_Y2" = -96;
"@MMK_R_Z2" = 7;
"@MMK_R_g2" = 10;
"@MMK_R_question" = -59;
"@MMK_R_t2" = -3;
"@MMK_R_v2" = -36;
"@MMK_R_z2" = 3;
X = 14;
x = 3;
};
seven.dnom = {
eight.dnom = -8;
six.dnom = -8;
three.dnom = -8;
two.dnom = -8;
zero.dnom = -8;
};
seven.numr = {
"@MMK_R_two.numr" = -10;
fraction = -60;
};
seveneighths = {
fraction = 22;
};
six.numr = {
fraction = -13;
seven.numr = -2;
};
six.osf = {
"@MMK_R_seven2" = -7;
};
space = {
"@MMK_R_V2" = -24;
"@MMK_R_c" = -14;
"@MMK_R_v2" = -7;
endash = -117;
softhyphen = -117;
};
t = {
"@MMK_R_t2" = -51;
};
three.numr = {
fraction = -13;
seven.numr = -2;
};
three.osf = {
"@MMK_R_four2" = -7;
};
threeeighths = {
fraction = 22;
};
threequarters = {
fraction = 22;
};
two.numr = {
fraction = 47;
};
twothirds = {
fraction = 22;
};
x = {
"@MMK_R_S2" = -17;
"@MMK_R_V2" = -6;
"@MMK_R_a2" = -20;
"@MMK_R_c" = -18;
"@MMK_R_g2" = 10;
"@MMK_R_hyphen2" = -40;
"@MMK_R_question" = -7;
"@MMK_R_s2" = -13;
"@MMK_R_t2" = -24;
"@MMK_R_u" = -5;
"@MMK_R_v2" = 7;
"@MMK_R_z2" = 3;
f = 3;
quotesinglbase = -3;
x = 18;
};
zero.numr = {
fraction = -13;
seven.numr = -2;
};
};
"F85293C6-8FE1-4D29-8E83-66190DA06428" = {
"@MMK_L_A" = {
"@MMK_R_C2" = -35;
"@MMK_R_S2" = -15;
"@MMK_R_T2" = -90;
"@MMK_R_U" = -30;
"@MMK_R_V2" = -118;
"@MMK_R_Wgrave2" = -25;
"@MMK_R_Y2" = -63;
"@MMK_R_Z2" = 10;
"@MMK_R_c" = -10;
"@MMK_R_g2" = -20;
"@MMK_R_hyphen2" = -30;
"@MMK_R_question" = -10;
"@MMK_R_quoteright2" = -98;
"@MMK_R_s2" = -15;
"@MMK_R_seven2" = -58;
"@MMK_R_six2" = -10;
"@MMK_R_t2" = -60;
"@MMK_R_u" = -5;
"@MMK_R_v2" = -50;
X = 25;
f = -60;
};
"@MMK_L_C" = {
"@MMK_R_A2" = -5;
"@MMK_R_J2" = -10;
"@MMK_R_T2" = -25;
"@MMK_R_Wgrave2" = -10;
"@MMK_R_Y2" = -15;
"@MMK_R_c" = -5;
"@MMK_R_comma2" = -10;
"@MMK_R_g2" = -20;
X = -15;
quotesinglbase = -20;
};
"@MMK_L_D" = {
"@MMK_R_A2" = -25;
"@MMK_R_J2" = -25;
"@MMK_R_S2" = -5;
"@MMK_R_T2" = -40;
"@MMK_R_V2" = -15;
"@MMK_R_Wgrave2" = -25;
"@MMK_R_Y2" = -40;
"@MMK_R_Z2" = -35;
"@MMK_R_question" = -10;
X = -30;
quotesinglbase = -40;
x = -10;
};
"@MMK_L_E" = {
"@MMK_R_A2" = -15;
"@MMK_R_AE" = -118;
"@MMK_R_B" = 10;
"@MMK_R_J2" = 20;
"@MMK_R_T2" = 10;
"@MMK_R_Wgrave2" = 40;
"@MMK_R_Y2" = 20;
"@MMK_R_a2" = -10;
"@MMK_R_b2" = -20;
"@MMK_R_c" = -10;
"@MMK_R_comma2" = -38;
"@MMK_R_emdash2" = -15;
"@MMK_R_g2" = -15;
"@MMK_R_hyphen2" = -20;
"@MMK_R_s2" = -15;
"@MMK_R_t2" = -35;
"@MMK_R_u" = -5;
"@MMK_R_v2" = -15;
X = 20;
f = -10;
x = -15;
};
"@MMK_L_F" = {
"@MMK_R_A2" = -63;
"@MMK_R_J2" = -50;
"@MMK_R_S2" = -10;
"@MMK_R_T2" = 20;
"@MMK_R_V2" = 15;
"@MMK_R_Y2" = 20;
"@MMK_R_a2" = -10;
"@MMK_R_c" = -10;
"@MMK_R_comma2" = -65;
"@MMK_R_g2" = -10;
"@MMK_R_hyphen2" = -10;
"@MMK_R_s2" = -10;
"@MMK_R_t2" = -5;
"@MMK_R_u" = -10;
"@MMK_R_v2" = -10;
"@MMK_R_z2" = -5;
quotesinglbase = -35;
x = -15;
};
"@MMK_L_G" = {
"@MMK_R_Oslash2" = 20;
"@MMK_R_S2" = -5;
"@MMK_R_T2" = -50;
"@MMK_R_V2" = -35;
"@MMK_R_Wgrave2" = -10;
"@MMK_R_Y2" = -30;
"@MMK_R_z2" = 5;
};
"@MMK_L_H" = {
"@MMK_R_a2" = -5;
"@MMK_R_emdash2" = -5;
"@MMK_R_g2" = -10;
};
"@MMK_L_J" = {
"@MMK_R_A2" = -30;
"@MMK_R_AE" = -30;
"@MMK_R_Z2" = 10;
"@MMK_R_comma2" = -35;
"@MMK_R_g2" = -30;
"@MMK_R_t2" = 20;
};
"@MMK_L_K" = {
"@MMK_R_A2" = 10;
"@MMK_R_J2" = 10;
"@MMK_R_S2" = -25;
"@MMK_R_U" = -15;
"@MMK_R_a2" = -5;
"@MMK_R_c" = -25;
"@MMK_R_hyphen2" = -53;
"@MMK_R_s2" = -10;
"@MMK_R_t2" = -53;
"@MMK_R_u" = -25;
"@MMK_R_v2" = -30;
f = -15;
};
"@MMK_L_L" = {
"@MMK_R_A2" = 15;
"@MMK_R_C2" = -20;
"@MMK_R_J2" = 20;
"@MMK_R_T2" = -98;
"@MMK_R_U" = -25;
"@MMK_R_V2" = -58;
"@MMK_R_Wgrave2" = -25;
"@MMK_R_Y2" = -78;
"@MMK_R_a2" = -25;
"@MMK_R_c" = -30;
"@MMK_R_g2" = 5;
"@MMK_R_hyphen2" = -58;
"@MMK_R_question" = -10;
"@MMK_R_quoteright2" = -92;
"@MMK_R_t2" = -60;
"@MMK_R_u" = -5;
"@MMK_R_v2" = -30;
"@MMK_R_z2" = 20;
f = -60;
quotesinglbase = 10;
};
"@MMK_L_O" = {
"@MMK_R_A2" = -35;
"@MMK_R_AE" = -87;
"@MMK_R_J2" = -20;
"@MMK_R_S2" = -10;
"@MMK_R_T2" = 15;
"@MMK_R_U" = -20;
"@MMK_R_Wgrave2" = -25;
"@MMK_R_Z2" = -20;
"@MMK_R_comma2" = -50;
"@MMK_R_emdash2" = -5;
"@MMK_R_g2" = -10;
"@MMK_R_quoteright2" = -30;
"@MMK_R_seven2" = -15;
"@MMK_R_t2" = -5;
};
"@MMK_L_Ohorn" = {
"@MMK_R_A2" = -40;
"@MMK_R_J2" = -10;
};
"@MMK_L_Oslash" = {
"@MMK_R_A2" = -30;
"@MMK_R_J2" = -40;
};
"@MMK_L_P" = {
"@MMK_R_A2" = -50;
"@MMK_R_AE" = -87;
"@MMK_R_C2" = 5;
"@MMK_R_J2" = -45;
"@MMK_R_S2" = 20;
"@MMK_R_Z2" = -10;
"@MMK_R_a2" = -5;
"@MMK_R_comma2" = -98;
"@MMK_R_emdash2" = -30;
"@MMK_R_g2" = -15;
"@MMK_R_hyphen2" = -35;
"@MMK_R_s2" = -15;
"@MMK_R_t2" = 5;
"@MMK_R_u" = -5;
"@MMK_R_v2" = 20;
f = 5;
quotesinglbase = -83;
x = 10;
};
"@MMK_L_R" = {
"@MMK_R_AE" = -20;
"@MMK_R_C2" = -5;
"@MMK_R_S2" = -25;
"@MMK_R_T2" = -10;
"@MMK_R_U" = -15;
"@MMK_R_V2" = -25;
"@MMK_R_Y2" = 10;
"@MMK_R_a2" = -10;
"@MMK_R_b2" = -10;
"@MMK_R_c" = -15;
"@MMK_R_comma2" = -5;
"@MMK_R_g2" = -20;
"@MMK_R_hyphen2" = -45;
"@MMK_R_u" = -10;
"@MMK_R_z2" = -10;
quotesinglbase = -20;
x = -10;
};
"@MMK_L_S" = {
"@MMK_R_A2" = -20;
"@MMK_R_AE" = -67;
"@MMK_R_B" = -5;
"@MMK_R_C2" = -20;
"@MMK_R_J2" = -10;
"@MMK_R_S2" = 5;
"@MMK_R_T2" = -30;
"@MMK_R_V2" = -20;
"@MMK_R_Y2" = -25;
"@MMK_R_c" = 5;
"@MMK_R_comma2" = -30;
"@MMK_R_g2" = -30;
"@MMK_R_t2" = -25;
"@MMK_R_v2" = 10;
"@MMK_R_z2" = -10;
X = -15;
quotesinglbase = -20;
x = -5;
};
"@MMK_L_T" = {
"@MMK_R_A2" = -90;
"@MMK_R_AE" = -67;
"@MMK_R_C2" = -10;
"@MMK_R_J2" = -45;
"@MMK_R_S2" = 5;
"@MMK_R_T2" = 20;
"@MMK_R_V2" = 40;
"@MMK_R_Wgrave2" = 25;
"@MMK_R_Y2" = 50;
"@MMK_R_Z2" = 10;
"@MMK_R_a2" = -58;
"@MMK_R_b2" = -50;
"@MMK_R_c" = -63;
"@MMK_R_comma2" = -118;
"@MMK_R_four2" = -78;
"@MMK_R_g2" = -65;
"@MMK_R_hyphen2" = -92;
"@MMK_R_j" = 30;
"@MMK_R_quoteright2" = 30;
"@MMK_R_s2" = -53;
"@MMK_R_t2" = -30;
"@MMK_R_u" = -50;
"@MMK_R_v2" = -30;
"@MMK_R_z2" = -35;
X = 5;
quotesinglbase = -72;
x = -40;
};
"@MMK_L_Uhorn" = {
"@MMK_R_A2" = -123;
"@MMK_R_J2" = -60;
"@MMK_R_V2" = 50;
"@MMK_R_Wgrave2" = 40;
"@MMK_R_a2" = -30;
"@MMK_R_b2" = -45;
"@MMK_R_c" = -20;
"@MMK_R_g2" = -50;
"@MMK_R_s2" = -30;
"@MMK_R_t2" = -25;
"@MMK_R_u" = -35;
"@MMK_R_z2" = -25;
x = -22;
};
"@MMK_L_V" = {
"@MMK_R_A2" = -118;
"@MMK_R_AE" = -92;
"@MMK_R_J2" = -45;
"@MMK_R_S2" = -5;
"@MMK_R_T2" = 40;
"@MMK_R_Wgrave2" = 40;
"@MMK_R_Y2" = 58;
"@MMK_R_Z2" = 30;
"@MMK_R_a2" = -35;
"@MMK_R_c" = -35;
"@MMK_R_comma2" = -126;
"@MMK_R_g2" = -15;
"@MMK_R_hyphen2" = -45;
"@MMK_R_j" = 30;
"@MMK_R_question" = 15;
"@MMK_R_s2" = -5;
X = -20;
f = 5;
quotesinglbase = -53;
};
"@MMK_L_Wgrave" = {
"@MMK_R_A2" = -72;
"@MMK_R_AE" = -50;
"@MMK_R_J2" = -30;
"@MMK_R_S2" = -10;
"@MMK_R_T2" = 40;
"@MMK_R_V2" = 10;
"@MMK_R_Wgrave2" = 20;
"@MMK_R_Y2" = 45;
"@MMK_R_a2" = -15;
"@MMK_R_b2" = -20;
"@MMK_R_c" = -20;
"@MMK_R_comma2" = -78;
"@MMK_R_g2" = -20;
"@MMK_R_hyphen2" = -20;
"@MMK_R_s2" = -10;
"@MMK_R_t2" = 20;
"@MMK_R_u" = -25;
"@MMK_R_v2" = -10;
X = 10;
f = -5;
quotesinglbase = -40;
x = -5;
};
"@MMK_L_Y" = {
"@MMK_R_A2" = -67;
"@MMK_R_AE" = -67;
"@MMK_R_C2" = -10;
"@MMK_R_J2" = -63;
"@MMK_R_S2" = -35;
"@MMK_R_T2" = 35;
"@MMK_R_V2" = 30;
"@MMK_R_Wgrave2" = 20;
"@MMK_R_Y2" = 53;
"@MMK_R_a2" = -50;
"@MMK_R_b2" = -30;
"@MMK_R_c" = -30;
"@MMK_R_comma2" = -58;
"@MMK_R_g2" = -58;
"@MMK_R_hyphen2" = -78;
"@MMK_R_question" = 10;
"@MMK_R_quoteright2" = 15;
"@MMK_R_s2" = -58;
"@MMK_R_t2" = -35;
"@MMK_R_u" = -30;
"@MMK_R_v2" = -35;
"@MMK_R_z2" = -25;
X = 10;
f = -10;
quotesinglbase = -87;
x = -25;
};
"@MMK_L_Z" = {
"@MMK_R_J2" = 20;
"@MMK_R_S2" = -20;
"@MMK_R_T2" = 20;
"@MMK_R_V2" = 5;
"@MMK_R_Y2" = 10;
"@MMK_R_Z2" = 15;
"@MMK_R_b2" = -25;
"@MMK_R_c" = -20;
"@MMK_R_hyphen2" = -83;
"@MMK_R_v2" = -10;
quotesinglbase = 10;
};
"@MMK_L_a" = {
"@MMK_R_T2" = -138;
"@MMK_R_V2" = -30;
"@MMK_R_Y2" = -30;
"@MMK_R_quotedbl2" = -58;
"@MMK_R_quoteright2" = -25;
"@MMK_R_s2" = -5;
"@MMK_R_seven2" = -50;
"@MMK_R_t2" = -25;
"@MMK_R_v2" = -15;
f = -25;
x = -15;
};
"@MMK_L_b" = {
"@MMK_R_J2" = -30;
"@MMK_R_T2" = -98;
"@MMK_R_V2" = -35;
"@MMK_R_Y2" = -30;
"@MMK_R_a2" = -10;
"@MMK_R_hyphen2" = 10;
"@MMK_R_question" = -10;
"@MMK_R_quotedbl2" = -78;
"@MMK_R_quoteright2" = -50;
"@MMK_R_s2" = -5;
"@MMK_R_t2" = -30;
"@MMK_R_z2" = -10;
f = -25;
x = -30;
};
"@MMK_L_comma" = {
"@MMK_R_A2" = 35;
"@MMK_R_T2" = -118;
"@MMK_R_V2" = -10;
"@MMK_R_Wgrave2" = -30;
"@MMK_R_Y2" = -58;
"@MMK_R_comma2" = 67;
"@MMK_R_four2" = -10;
"@MMK_R_g2" = 20;
"@MMK_R_quoteright2" = -63;
"@MMK_R_seven2" = -20;
"@MMK_R_two2" = 20;
};
"@MMK_L_d" = {
"@MMK_R_b2" = 10;
"@MMK_R_quotedbl2" = -10;
};
"@MMK_L_emdash" = {
"@MMK_R_A2" = -20;
"@MMK_R_B" = -15;
"@MMK_R_J2" = -30;
"@MMK_R_V2" = -35;
"@MMK_R_c" = -5;
X = -25;
x = -15;
};
"@MMK_L_five" = {
"@MMK_R_onethird" = 58;
"@MMK_R_two.numr" = 30;
};
"@MMK_L_four" = {
"@MMK_R_T2" = -20;
"@MMK_R_five2" = -5;
"@MMK_R_onethird" = 58;
"@MMK_R_two.numr" = 25;
};
"@MMK_L_g" = {
"@MMK_R_a2" = -15;
"@MMK_R_bar" = 15;
"@MMK_R_c" = -20;
"@MMK_R_g2" = -20;
"@MMK_R_hyphen2" = -45;
"@MMK_R_j" = 20;
"@MMK_R_s2" = -25;
"@MMK_R_t2" = -10;
"@MMK_R_u" = -20;
"@MMK_R_v2" = -10;
f = 5;
quotesinglbase = -5;
x = -10;
};
"@MMK_L_hyphen" = {
"@MMK_R_A2" = -25;
"@MMK_R_J2" = -45;
"@MMK_R_S2" = -25;
"@MMK_R_T2" = -138;
"@MMK_R_V2" = -87;
"@MMK_R_Wgrave2" = -20;
"@MMK_R_Y2" = -78;
"@MMK_R_Z2" = -30;
"@MMK_R_a2" = 5;
"@MMK_R_one2" = -83;
"@MMK_R_seven2" = -118;
"@MMK_R_t2" = -15;
"@MMK_R_v2" = -10;
"@MMK_R_z2" = -15;
X = -40;
x = -30;
};
"@MMK_L_k" = {
"@MMK_R_a2" = -10;
"@MMK_R_c" = -20;
"@MMK_R_g2" = -20;
"@MMK_R_hyphen2" = -20;
"@MMK_R_question" = -10;
"@MMK_R_quotedbl2" = -50;
"@MMK_R_s2" = -5;
"@MMK_R_t2" = -30;
"@MMK_R_u" = -15;
"@MMK_R_v2" = 10;
f = 10;
};
"@MMK_L_l" = {
"@MMK_R_T2" = -40;
"@MMK_R_V2" = -20;
"@MMK_R_Y2" = -20;
"@MMK_R_a2" = -5;
"@MMK_R_b2" = -5;
"@MMK_R_c" = -20;
"@MMK_R_g2" = 15;
"@MMK_R_hyphen2" = -20;
"@MMK_R_quotedbl2" = -58;
"@MMK_R_quoteright2" = -58;
"@MMK_R_s2" = -20;
"@MMK_R_t2" = -40;
"@MMK_R_u" = -25;
"@MMK_R_v2" = -15;
"@MMK_R_z2" = 5;
f = -25;
};
"@MMK_L_ohorn" = {
"@MMK_R_J2" = -38;
};
"@MMK_L_one" = {
"@MMK_R_onethird" = 30;
"@MMK_R_two.numr" = 30;
};
"@MMK_L_quotedbl" = {
"@MMK_R_a2" = -67;
"@MMK_R_b2" = -58;
"@MMK_R_c" = -67;
"@MMK_R_g2" = -67;
"@MMK_R_s2" = -87;
"@MMK_R_t2" = -20;
"@MMK_R_u" = -40;
"@MMK_R_z2" = -30;
x = -30;
};
"@MMK_L_quoteleft" = {
"@MMK_R_A2" = -83;
"@MMK_R_J2" = -45;
"@MMK_R_S2" = -5;
"@MMK_R_T2" = 20;
"@MMK_R_V2" = 25;
"@MMK_R_Wgrave2" = 10;
"@MMK_R_Y2" = 30;
"@MMK_R_a2" = -15;
"@MMK_R_c" = -53;
"@MMK_R_g2" = -20;
"@MMK_R_s2" = -30;
"@MMK_R_t2" = 20;
"@MMK_R_v2" = 30;
X = 10;
};
"@MMK_L_quoteright" = {
"@MMK_R_A2" = -92;
"@MMK_R_a2" = -58;
"@MMK_R_b2" = -20;
"@MMK_R_c" = -58;
"@MMK_R_comma2" = -87;
"@MMK_R_s2" = -58;
"@MMK_R_v2" = 20;
"@MMK_R_z2" = -30;
};
"@MMK_L_r" = {
"@MMK_R_a2" = -25;
"@MMK_R_c" = -15;
"@MMK_R_comma2" = -92;
"@MMK_R_g2" = -25;
"@MMK_R_hyphen2" = -72;
"@MMK_R_question" = -15;
"@MMK_R_quoteright2" = 5;
"@MMK_R_s2" = -5;
"@MMK_R_t2" = -25;
"@MMK_R_v2" = 15;
"@MMK_R_z2" = 10;
quotesinglbase = -40;
x = 15;
};
"@MMK_L_s" = {
"@MMK_R_hyphen2" = 25;
"@MMK_R_quotedbl2" = -10;
"@MMK_R_t2" = -20;
quotesinglbase = -5;
x = -10;
};
"@MMK_L_seven" = {
"@MMK_R_b2" = -15;
"@MMK_R_comma2" = -127;
"@MMK_R_four2" = -40;
"@MMK_R_one2" = 30;
"@MMK_R_onethird" = 98;
"@MMK_R_question" = 30;
"@MMK_R_seven2" = 20;
"@MMK_R_six2" = -30;
"@MMK_R_two.numr" = 40;
"@MMK_R_two2" = 10;
eight.osf = -30;
nine.osf = 10;
};
"@MMK_L_six" = {
"@MMK_R_onethird" = 58;
"@MMK_R_seven2" = -20;
"@MMK_R_six2" = -10;
"@MMK_R_two.numr" = 58;
};
"@MMK_L_t" = {
"@MMK_R_V2" = -20;
"@MMK_R_a2" = -5;
"@MMK_R_c" = -10;
"@MMK_R_g2" = 15;
"@MMK_R_hyphen2" = -30;
"@MMK_R_quotedbl2" = -30;
"@MMK_R_t2" = -50;
"@MMK_R_u" = -5;
f = -50;
};
"@MMK_L_two" = {
"@MMK_R_onethird" = 58;
"@MMK_R_question" = -10;
"@MMK_R_two.numr" = 63;
};
"@MMK_L_uhorn" = {
"@MMK_R_comma2" = -15;
"@MMK_R_t2" = 15;
"@MMK_R_v2" = 10;
};
"@MMK_L_v" = {
"@MMK_R_A2" = -35;
"@MMK_R_V2" = -20;
"@MMK_R_a2" = -5;
"@MMK_R_c" = -5;
"@MMK_R_comma2" = -50;
"@MMK_R_g2" = -15;
"@MMK_R_hyphen2" = -5;
"@MMK_R_question" = -20;
"@MMK_R_quotedbl2" = 20;
"@MMK_R_s2" = -5;
"@MMK_R_t2" = -15;
quotesinglbase = -50;
x = 10;
};
"@MMK_L_z" = {
"@MMK_R_g2" = -10;
"@MMK_R_hyphen2" = -25;
"@MMK_R_quotedbl2" = -30;
"@MMK_R_s2" = -5;
"@MMK_R_t2" = -5;
"@MMK_R_v2" = -20;
"@MMK_R_z2" = 5;
f = -5;
x = -15;
};
B = {
"@MMK_R_AE" = 20;
"@MMK_R_C2" = -5;
"@MMK_R_T2" = -30;
"@MMK_R_V2" = -20;
"@MMK_R_Wgrave2" = -15;
"@MMK_R_Y2" = -40;
"@MMK_R_Z2" = -10;
"@MMK_R_g2" = -10;
"@MMK_R_hyphen2" = -15;
"@MMK_R_question" = -10;
"@MMK_R_quoteright2" = -30;
"@MMK_R_v2" = -5;
"@MMK_R_z2" = -10;
X = -20;
quotesinglbase = -15;
};
Q = {
comma = -50;
ellipsis = -50;
period = -50;
periodcentered = -50;
underscore = -50;
};
V = {
ae = -63;
};
W = {
ae = -63;
};
X = {
"@MMK_R_A2" = -10;
"@MMK_R_J2" = 20;
"@MMK_R_Oslash2" = 20;
"@MMK_R_S2" = -15;
"@MMK_R_U" = -10;
"@MMK_R_Wgrave2" = 15;
"@MMK_R_Y2" = -20;
"@MMK_R_c" = -20;
"@MMK_R_emdash2" = -30;
"@MMK_R_hyphen2" = -40;
"@MMK_R_s2" = -20;
"@MMK_R_t2" = 10;
"@MMK_R_u" = -10;
"@MMK_R_v2" = -20;
X = 63;
quotesinglbase = 15;
};
ae = {
space = -10;
v = -5;
};
ampersand = {
T = -50;
Tbar = -50;
Tcaron = -50;
Tcedilla = -50;
Tcommaaccent = -50;
Tdotbelow = -50;
V = -30;
W = -30;
Wacute = -35;
Wcircumflex = -35;
Wdieresis = -35;
Wgrave = -35;
};
at = {
space = -10;
v = -5;
};
b = {
space = -10;
v = -5;
};
c = {
at = -5;
b = -10;
c = -5;
cacute = -5;
ccaron = -5;
ccedilla = -5;
ccircumflex = -5;
cdotaccent = -5;
d = -5;
dcaron = -5;
dcroat = -5;
ddotbelow = -5;
e = -5;
eacute = -5;
ebreve = -5;
ecaron = -5;
ecircumflex = -5;
ecircumflexacute = -5;
ecircumflexdotbelow = -5;
ecircumflexgrave = -5;
ecircumflexhoi = -5;
ecircumflextilde = -5;
edblgrave = -5;
edieresis = -5;
edotaccent = -5;
edotbelow = -5;
egrave = -5;
ehoi = -5;
einvertedbreve = -5;
emacron = -5;
eng = -10;
eogonek = -5;
eth = -5;
etilde = -5;
g.ss01 = -5;
germandbls = -10;
h = -10;
hbar = -10;
hcircumflex = -10;
hdotbelow = -10;
i = -10;
iacute = -10;
ibreve = -10;
icircumflex = -10;
idblgrave = -10;
idieresis = -10;
idotaccent = -10;
idotbelow = -10;
igrave = -10;
ihoi = -10;
iinvertedbreve = -10;
imacron = -10;
iogonek = -10;
itilde = -10;
k = -10;
kcommaaccent = -10;
kgreenlandic = -10;
l = -10;
lacute = -10;
lcaron = -10;
lcommaaccent = -10;
ldot = -10;
lslash = -10;
m = -10;
n = -10;
nacute = -10;
ncaron = -10;
ncommaaccent = -10;
ndot = -10;
ntilde = -10;
o = -5;
oacute = -5;
obreve = -5;
ocircumflex = -5;
ocircumflexacute = -5;
ocircumflexdotbelow = -5;
ocircumflexgrave = -5;
ocircumflexhoi = -5;
ocircumflextilde = -5;
odblgrave = -5;
odieresis = -5;
odotbelow = -5;
oe = -5;
ograve = -5;
ohoi = -5;
ohorn = -5;
ohornacute = -5;
ohorndotbelow = -5;
ohorngrave = -5;
ohornhoi = -5;
ohorntilde = -5;
ohungarumlaut = -5;
oinvertedbreve = -5;
omacron = -5;
oogonek = -5;
oslash = -5;
oslashacute = -5;
otilde = -5;
p = -10;
q = -5;
r = -10;
racute = -10;
rcaron = -10;
rcommaaccent = -10;
rdblgrave = -10;
rdotbelow = -10;
rinvertedbreve = -10;
schwa = -5;
space = -10;
thorn = -10;
v = -5;
};
cacute = {
space = -10;
v = -5;
};
ccaron = {
space = -10;
v = -5;
};
ccedilla = {
space = -10;
v = -5;
};
ccircumflex = {
space = -10;
v = -5;
};
cdotaccent = {
space = -10;
v = -5;
};
colon = {
space = -10;
};
comma = {
space = -10;
};
dcroat = {
at = -25;
c = -25;
cacute = -25;
ccaron = -25;
ccedilla = -25;
ccircumflex = -25;
cdotaccent = -25;
d = -25;
dcaron = -25;
dcroat = -25;
ddotbelow = -25;
e = -25;
eacute = -25;
ebreve = -25;
ecaron = -25;
ecircumflex = -25;
ecircumflexacute = -25;
ecircumflexdotbelow = -25;
ecircumflexgrave = -25;
ecircumflexhoi = -25;
ecircumflextilde = -25;
edblgrave = -25;
edieresis = -25;
edotaccent = -25;
edotbelow = -25;
egrave = -25;
ehoi = -25;
einvertedbreve = -25;
emacron = -25;
eogonek = -25;
eth = -25;
etilde = -25;
g.ss01 = -25;
o = -25;
oacute = -25;
obreve = -25;
ocircumflex = -25;
ocircumflexacute = -25;
ocircumflexdotbelow = -25;
ocircumflexgrave = -25;
ocircumflexhoi = -25;
ocircumflextilde = -25;
odblgrave = -25;
odieresis = -25;
odotbelow = -25;
oe = -25;
ograve = -25;
ohoi = -25;
ohorn = -25;
ohornacute = -25;
ohorndotbelow = -25;
ohorngrave = -25;
ohornhoi = -25;
ohorntilde = -25;
ohungarumlaut = -25;
oinvertedbreve = -25;
omacron = -25;
oogonek = -25;
oslash = -25;
oslashacute = -25;
otilde = -25;
q = -25;
schwa = -25;
};
e = {
space = -10;
v = -5;
};
eacute = {
space = -10;
v = -5;
};
ebreve = {
space = -10;
v = -5;
};
ecaron = {
space = -10;
v = -5;
};
ecircumflex = {
space = -10;
v = -5;
};
ecircumflexacute = {
space = -10;
v = -5;
};
ecircumflexdotbelow = {
space = -10;
v = -5;
};
ecircumflexgrave = {
space = -10;
v = -5;
};
ecircumflexhoi = {
space = -10;
v = -5;
};
ecircumflextilde = {
space = -10;
v = -5;
};
edblgrave = {
space = -10;
v = -5;
};
edieresis = {
space = -10;
v = -5;
};
edotaccent = {
space = -10;
v = -5;
};
edotbelow = {
space = -10;
v = -5;
};
egrave = {
space = -10;
v = -5;
};
ehoi = {
space = -10;
v = -5;
};
eight = {
onehalf = 58;
};
eight.numr = {
fraction = -10;
};
eight.osf = {
"@MMK_R_four2" = -10;
"@MMK_R_seven2" = -25;
};
einvertedbreve = {
space = -10;
v = -5;
};
ellipsis = {
space = -10;
};
emacron = {
space = -10;
v = -5;
};
eogonek = {
space = -10;
v = -5;
};
eth = {
space = -10;
v = -5;
};
etilde = {
space = -10;
v = -5;
};
exclam = {
braceright = 30;
bracketright = 30;
parenright = 30;
question = 30;
};
f = {
"@MMK_R_V2" = 30;
"@MMK_R_a2" = -5;
"@MMK_R_c" = -10;
"@MMK_R_comma2" = -30;
"@MMK_R_g2" = -25;
"@MMK_R_hyphen2" = -15;
"@MMK_R_question" = 40;
"@MMK_R_quoteright2" = 20;
"@MMK_R_s2" = -10;
"@MMK_R_t2" = -50;
"@MMK_R_z2" = -5;
f = -40;
quotesinglbase = -25;
};
five = {
onehalf = 58;
};
five.numr = {
fraction = -10;
};
five.osf = {
onehalf = 58;
};
fiveeighths = {
fraction = 20;
};
fl = {
l = -15;
};
four = {
onehalf = 50;
};
four.osf = {
onehalf = 50;
};
fraction = {
eight.dnom = -15;
four.dnom = -92;
one.dnom = 35;
seven.dnom = 58;
six.dnom = -15;
three.dnom = -15;
two.dnom = 20;
zero.dnom = -15;
};
l = {
l = -15;
};
lacute = {
l = -15;
};
lcaron = {
l = -15;
};
lcommaaccent = {
l = -15;
};
ldot = {
l = -15;
};
lslash = {
a = -20;
aacute = -20;
abreve = -20;
abreveacute = -20;
abrevedotbelow = -20;
abrevegrave = -20;
abrevehoi = -20;
abrevetilde = -20;
acircumflex = -20;
acircumflexacute = -20;
acircumflexdotbelow = -20;
acircumflexgrave = -20;
acircumflexhoi = -20;
acircumflextilde = -20;
adblgrave = -20;
adieresis = -20;
adotbelow = -20;
ae = -20;
aeacute = -20;
agrave = -20;
ahoi = -20;
ainvertedbreve = -20;
amacron = -20;
aogonek = -20;
aring = -20;
aringacute = -20;
atilde = -20;
l = -15;
};
nine = {
onehalf = 58;
};
nine.numr = {
fraction = -10;
};
nine.osf = {
"@MMK_R_seven2" = -40;
nine.osf = 30;
};
o = {
space = -10;
v = -5;
};
oacute = {
space = -10;
v = -5;
};
obreve = {
space = -10;
v = -5;
};
ocircumflex = {
space = -10;
v = -5;
};
ocircumflexacute = {
space = -10;
v = -5;
};
ocircumflexdotbelow = {
space = -10;
v = -5;
};
ocircumflexgrave = {
space = -10;
v = -5;
};
ocircumflexhoi = {
space = -10;
v = -5;
};
ocircumflextilde = {
space = -10;
v = -5;
};
odblgrave = {
space = -10;
v = -5;
};
odieresis = {
space = -10;
v = -5;
};
odotbelow = {
space = -10;
v = -5;
};
oe = {
space = -10;
v = -5;
};
ograve = {
space = -10;
v = -5;
};
ohoi = {
space = -10;
v = -5;
};
ohungarumlaut = {
space = -10;
v = -5;
};
oinvertedbreve = {
space = -10;
v = -5;
};
omacron = {
space = -10;
v = -5;
};
one = {
onehalf = 58;
};
one.numr = {
fraction = 20;
};
one.osf = {
onehalf = 58;
};
oneeighth = {
fraction = 20;
};
onequarter = {
fraction = 20;
};
onethird = {
fraction = 20;
};
oogonek = {
space = -10;
v = -5;
};
oslash = {
space = -10;
v = -5;
w = 30;
wacute = 30;
wcircumflex = 30;
wdieresis = 30;
wgrave = 30;
y = 30;
yacute = 30;
ycircumflex = 30;
ydieresis = 30;
ydotbelow = 30;
ygrave = 30;
yhoi = 30;
ytilde = 30;
};
oslashacute = {
space = -10;
v = -5;
};
otilde = {
space = -10;
v = -5;
};
p = {
space = -10;
v = -5;
};
period = {
space = -10;
};
periodcentered = {
space = -10;
};
quotedblright = {
space = -35;
};
quoteright = {
space = -35;
};
quotesinglbase = {
"@MMK_R_A2" = 10;
"@MMK_R_J2" = 10;
"@MMK_R_S2" = -10;
"@MMK_R_T2" = -72;
"@MMK_R_U" = -20;
"@MMK_R_V2" = -53;
"@MMK_R_Wgrave2" = -40;
"@MMK_R_Y2" = -87;
"@MMK_R_Z2" = 10;
"@MMK_R_g2" = 10;
"@MMK_R_question" = -58;
"@MMK_R_t2" = -5;
"@MMK_R_v2" = -25;
X = 20;
x = 5;
};
schwa = {
space = -10;
v = -5;
};
seven = {
onehalf = 98;
};
seven.dnom = {
eight.dnom = -5;
six.dnom = -5;
three.dnom = -5;
two.dnom = -5;
zero.dnom = -5;
};
seven.numr = {
eight.numr = -10;
five.numr = -10;
fraction = -67;
nine.numr = -10;
six.numr = -10;
three.numr = -10;
two.numr = -10;
zero.numr = -10;
};
seven.osf = {
onehalf = 98;
};
seveneighths = {
fraction = 20;
};
six = {
onehalf = 58;
};
six.numr = {
fraction = -10;
};
six.osf = {
"@MMK_R_seven2" = -10;
};
space = {
V = -30;
W = -30;
at = -20;
c = -20;
cacute = -20;
ccaron = -20;
ccedilla = -20;
ccircumflex = -20;
cdotaccent = -20;
d = -20;
dcaron = -20;
dcroat = -20;
ddotbelow = -20;
e = -20;
eacute = -20;
ebreve = -20;
ecaron = -20;
ecircumflex = -20;
ecircumflexacute = -20;
ecircumflexdotbelow = -20;
ecircumflexgrave = -20;
ecircumflexhoi = -20;
ecircumflextilde = -20;
edblgrave = -20;
edieresis = -20;
edotaccent = -20;
edotbelow = -20;
egrave = -20;
ehoi = -20;
einvertedbreve = -20;
emacron = -20;
endash = -170;
eogonek = -20;
eth = -20;
etilde = -20;
g.ss01 = -20;
o = -20;
oacute = -20;
obreve = -20;
ocircumflex = -20;
ocircumflexacute = -20;
ocircumflexdotbelow = -20;
ocircumflexgrave = -20;
ocircumflexhoi = -20;
ocircumflextilde = -20;
odblgrave = -20;
odieresis = -20;
odotbelow = -20;
oe = -20;
ograve = -20;
ohoi = -20;
ohorn = -20;
ohornacute = -20;
ohorndotbelow = -20;
ohorngrave = -20;
ohornhoi = -20;
ohorntilde = -20;
ohungarumlaut = -20;
oinvertedbreve = -20;
omacron = -20;
oogonek = -20;
oslash = -20;
oslashacute = -20;
otilde = -20;
q = -20;
schwa = -20;
softhyphen = -170;
v = -10;
w = -10;
wacute = -10;
wcircumflex = -10;
wdieresis = -10;
wgrave = -10;
y = -10;
yacute = -10;
ycircumflex = -10;
ydieresis = -10;
ydotbelow = -10;
ygrave = -10;
yhoi = -10;
ytilde = -10;
};
t = {
fi = -65;
fl = -65;
t = -65;
tbar = -65;
tcaron = -65;
tcedilla = -65;
tcommaaccent = -65;
tdotbelow = -65;
};
thorn = {
space = -10;
v = -5;
};
three = {
onehalf = 58;
};
three.numr = {
fraction = -10;
};
three.osf = {
"@MMK_R_four2" = -10;
};
threeeighths = {
fraction = 20;
};
threequarters = {
fraction = 20;
};
two = {
onehalf = 58;
seven.numr = 50;
};
two.numr = {
fraction = 45;
};
two.osf = {
onehalf = 58;
seven.numr = 50;
};
twothirds = {
fraction = 20;
};
underscore = {
space = -10;
};
x = {
"@MMK_R_S2" = -20;
"@MMK_R_a2" = -20;
"@MMK_R_c" = -10;
"@MMK_R_g2" = 15;
"@MMK_R_hyphen2" = -40;
"@MMK_R_question" = -10;
"@MMK_R_s2" = -10;
"@MMK_R_t2" = -35;
"@MMK_R_v2" = 5;
"@MMK_R_z2" = 5;
x = 20;
};
zero = {
onehalf = 58;
};
zero.numr = {
fraction = -10;
};
zero.osf = {
onehalf = 58;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = descender;
},
{
type = "italic angle";
},
{
type = "x-height";
}
);
properties = (
{
key = copyrights;
values = (
{
language = dflt;
value = "Copyright (c) 2015, Impallari Type (www.impallari.com)\nCopyright 2020 The Public Sans Project Authors (https://github.com/uswds/public-sans)\nCopyright 2011 The Roboto Flex Project Authors (https://github.com/googlefonts/roboto-flex)\nCopyright 2024 The General Gothic Project Authors (https://github.com/barrymieny/general-gothic)\nCopyright 2018 The Cheyenne Sans Project Authors";
}
);
},
{
key = designerURL;
value = "https://designsystem.digital.gov and http://www.impallari.com";
},
{
key = designers;
values = (
{
language = dflt;
value = "The Public Sans project authors (U.S. Web Design System), Libre Franklin designed by Pablo Impallari and Rodrigo Fuenzalida, Roboto Flex designed by David Berlow, General Gothic designed by Barry Mieny, Main changes by Cristiano Sobral";
}
);
},
{
key = licenseURL;
value = "SIL Open Font License, Version 1.1: https://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&id=OFL_web; USWDS Modified Version: https://github.com/uswds/public-sans/blob/master/LICENSE.md";
},
{
key = licenses;
values = (
{
language = dflt;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: http://scripts.sil.org/OFL. The license for USWDS’s Modified Version, covering USWDS’s modifications to Public Sans, is available at https://github.com/uswds/public-sans/blob/master/LICENSE.md.";
}
);
},
{
key = manufacturers;
values = (
{
language = dflt;
value = "The Cheyenne Sans Project Authors";
}
);
}
);
unitsPerEm = 1000;
userData = {
GSDimensionPlugin.Dimensions = {
"F85293C6-8FE1-4D29-8E83-66190DA06428" = {
HV = 80;
HH = 84;
OV = 90;
OH = 83;
oV = 84;
oH = 75;
nV = 74;
tH = 70;
};
"84E72C1A-4249-4129-A9E3-B383380F4618" = {
HV = 80;
HH = 84;
OV = 90;
OH = 83;
oV = 84;
oH = 75;
nV = 74;
tH = 70;
};
"01327C5C-830D-4CC3-9E97-2D6CCD6A61F0" = {
HV = 399;
HH = 326;
OV = 435;
OH = 319;
oV = 388;
oH = 288;
nV = 399;
tH = 273;
};
};
};
versionMajor = 2;
versionMinor = 4;
}